{"ast":null,"code":"var AWS = require('./core');\n\nvar util = require('./util');\n\nvar endpointDiscoveryEnabledEnvs = ['AWS_ENABLE_ENDPOINT_DISCOVERY', 'AWS_ENDPOINT_DISCOVERY_ENABLED'];\n/**\n * Generate key (except resources and operation part) to index the endpoints in the cache\n * If input shape has endpointdiscoveryid trait then use\n *   accessKey + operation + resources + region + service as cache key\n * If input shape doesn't have endpointdiscoveryid trait then use\n *   accessKey + region + service as cache key\n * @return [map<String,String>] object with keys to index endpoints.\n * @api private\n */\n\nfunction getCacheKey(request) {\n  var service = request.service;\n  var api = service.api || {};\n  var operations = api.operations;\n  var identifiers = {};\n\n  if (service.config.region) {\n    identifiers.region = service.config.region;\n  }\n\n  if (api.serviceId) {\n    identifiers.serviceId = api.serviceId;\n  }\n\n  if (service.config.credentials.accessKeyId) {\n    identifiers.accessKeyId = service.config.credentials.accessKeyId;\n  }\n\n  return identifiers;\n}\n/**\n * Recursive helper for marshallCustomIdentifiers().\n * Looks for required string input members that have 'endpointdiscoveryid' trait.\n * @api private\n */\n\n\nfunction marshallCustomIdentifiersHelper(result, params, shape) {\n  if (!shape || params === undefined || params === null) return;\n\n  if (shape.type === 'structure' && shape.required && shape.required.length > 0) {\n    util.arrayEach(shape.required, function (name) {\n      var memberShape = shape.members[name];\n\n      if (memberShape.endpointDiscoveryId === true) {\n        var locationName = memberShape.isLocationName ? memberShape.name : name;\n        result[locationName] = String(params[name]);\n      } else {\n        marshallCustomIdentifiersHelper(result, params[name], memberShape);\n      }\n    });\n  }\n}\n/**\n * Get custom identifiers for cache key.\n * Identifies custom identifiers by checking each shape's `endpointDiscoveryId` trait.\n * @param [object] request object\n * @param [object] input shape of the given operation's api\n * @api private\n */\n\n\nfunction marshallCustomIdentifiers(request, shape) {\n  var identifiers = {};\n  marshallCustomIdentifiersHelper(identifiers, request.params, shape);\n  return identifiers;\n}\n/**\n * Call endpoint discovery operation when it's optional.\n * When endpoint is available in cache then use the cached endpoints. If endpoints\n * are unavailable then use regional endpoints and call endpoint discovery operation\n * asynchronously. This is turned off by default.\n * @param [object] request object\n * @api private\n */\n\n\nfunction optionalDiscoverEndpoint(request) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n\n  var endpoints = AWS.endpointCache.get(cacheKey);\n\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //or endpoint operation just failed in 1 minute\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    //found endpoint record from cache\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n  } else {\n    //endpoint record not in cache or outdated. make discovery operation\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers\n    });\n    addApiVersionHeader(endpointRequest);\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    endpointRequest.removeListener('retry', AWS.EventListeners.Core.RETRY_CHECK); //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n\n    AWS.endpointCache.put(cacheKey, [{\n      Address: '',\n      CachePeriodInMinutes: 1\n    }]);\n    endpointRequest.send(function (err, data) {\n      if (data && data.Endpoints) {\n        AWS.endpointCache.put(cacheKey, data.Endpoints);\n      } else if (err) {\n        AWS.endpointCache.put(cacheKey, [{\n          Address: '',\n          CachePeriodInMinutes: 1 //not to make more endpoint operation in next 1 minute\n\n        }]);\n      }\n    });\n  }\n}\n\nvar requestQueue = {};\n/**\n * Call endpoint discovery operation when it's required.\n * When endpoint is available in cache then use cached ones. If endpoints are\n * unavailable then SDK should call endpoint operation then use returned new\n * endpoint for the api call. SDK will automatically attempt to do endpoint\n * discovery. This is turned off by default\n * @param [object] request object\n * @api private\n */\n\nfunction requiredDiscoverEndpoint(request, done) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n\n  var cacheKeyStr = AWS.EndpointCache.getKeyString(cacheKey);\n  var endpoints = AWS.endpointCache.get(cacheKeyStr); //endpoint cache also accepts string keys\n\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //push request object to a pending queue\n    if (!requestQueue[cacheKeyStr]) requestQueue[cacheKeyStr] = [];\n    requestQueue[cacheKeyStr].push({\n      request: request,\n      callback: done\n    });\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n    done();\n  } else {\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers\n    });\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    addApiVersionHeader(endpointRequest); //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n\n    AWS.endpointCache.put(cacheKeyStr, [{\n      Address: '',\n      CachePeriodInMinutes: 60 //long-live cache\n\n    }]);\n    endpointRequest.send(function (err, data) {\n      if (err) {\n        request.response.error = util.error(err, {\n          retryable: false\n        });\n        AWS.endpointCache.remove(cacheKey); //fail all the pending requests in batch\n\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function (requestContext) {\n            requestContext.request.response.error = util.error(err, {\n              retryable: false\n            });\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      } else if (data) {\n        AWS.endpointCache.put(cacheKeyStr, data.Endpoints);\n        request.httpRequest.updateEndpoint(data.Endpoints[0].Address); //update the endpoint for all the pending requests in batch\n\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function (requestContext) {\n            requestContext.request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      }\n\n      done();\n    });\n  }\n}\n/**\n * add api version header to endpoint operation\n * @api private\n */\n\n\nfunction addApiVersionHeader(endpointRequest) {\n  var api = endpointRequest.service.api;\n  var apiVersion = api.apiVersion;\n\n  if (apiVersion && !endpointRequest.httpRequest.headers['x-amz-api-version']) {\n    endpointRequest.httpRequest.headers['x-amz-api-version'] = apiVersion;\n  }\n}\n/**\n * If api call gets invalid endpoint exception, SDK should attempt to remove the invalid\n * endpoint from cache.\n * @api private\n */\n\n\nfunction invalidateCachedEndpoints(response) {\n  var error = response.error;\n  var httpResponse = response.httpResponse;\n\n  if (error && (error.code === 'InvalidEndpointException' || httpResponse.statusCode === 421)) {\n    var request = response.request;\n    var operations = request.service.api.operations || {};\n    var inputShape = operations[request.operation] ? operations[request.operation].input : undefined;\n    var identifiers = marshallCustomIdentifiers(request, inputShape);\n    var cacheKey = getCacheKey(request);\n\n    if (Object.keys(identifiers).length > 0) {\n      cacheKey = util.update(cacheKey, identifiers);\n      if (operations[request.operation]) cacheKey.operation = operations[request.operation].name;\n    }\n\n    AWS.endpointCache.remove(cacheKey);\n  }\n}\n/**\n * If endpoint is explicitly configured, SDK should not do endpoint discovery in anytime.\n * @param [object] client Service client object.\n * @api private\n */\n\n\nfunction hasCustomEndpoint(client) {\n  //if set endpoint is set for specific client, enable endpoint discovery will raise an error.\n  if (client._originalConfig && client._originalConfig.endpoint && client._originalConfig.endpointDiscoveryEnabled === true) {\n    throw util.error(new Error(), {\n      code: 'ConfigurationException',\n      message: 'Custom endpoint is supplied; endpointDiscoveryEnabled must not be true.'\n    });\n  }\n\n  ;\n  var svcConfig = AWS.config[client.serviceIdentifier] || {};\n  return Boolean(AWS.config.endpoint || svcConfig.endpoint || client._originalConfig && client._originalConfig.endpoint);\n}\n/**\n * @api private\n */\n\n\nfunction isFalsy(value) {\n  return ['false', '0'].indexOf(value) >= 0;\n}\n/**\n * If endpoint discovery should perform for this request when no operation requires endpoint\n * discovery for the given service.\n * SDK performs config resolution in order like below:\n * 1. If set in client configuration.\n * 2. If set in env AWS_ENABLE_ENDPOINT_DISCOVERY.\n * 3. If set in shared ini config file with key 'endpoint_discovery_enabled'.\n * @param [object] request request object.\n * @returns [boolean|undefined] if endpoint discovery config is not set in any source, this\n *  function returns undefined\n * @api private\n */\n\n\nfunction resolveEndpointDiscoveryConfig(request) {\n  var service = request.service || {};\n\n  if (service.config.endpointDiscoveryEnabled !== undefined) {\n    return service.config.endpointDiscoveryEnabled;\n  } //shared ini file is only available in Node\n  //not to check env in browser\n\n\n  if (util.isBrowser()) return undefined; // If any of recognized endpoint discovery config env is set\n\n  for (var i = 0; i < endpointDiscoveryEnabledEnvs.length; i++) {\n    var env = endpointDiscoveryEnabledEnvs[i];\n\n    if (Object.prototype.hasOwnProperty.call(process.env, env)) {\n      if (process.env[env] === '' || process.env[env] === undefined) {\n        throw util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'environmental variable ' + env + ' cannot be set to nothing'\n        });\n      }\n\n      return !isFalsy(process.env[env]);\n    }\n  }\n\n  var configFile = {};\n\n  try {\n    configFile = AWS.util.iniLoader ? AWS.util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[AWS.util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n\n  var sharedFileConfig = configFile[process.env.AWS_PROFILE || AWS.util.defaultProfile] || {};\n\n  if (Object.prototype.hasOwnProperty.call(sharedFileConfig, 'endpoint_discovery_enabled')) {\n    if (sharedFileConfig.endpoint_discovery_enabled === undefined) {\n      throw util.error(new Error(), {\n        code: 'ConfigurationException',\n        message: 'config file entry \\'endpoint_discovery_enabled\\' cannot be set to nothing'\n      });\n    }\n\n    return !isFalsy(sharedFileConfig.endpoint_discovery_enabled);\n  }\n\n  return undefined;\n}\n/**\n * attach endpoint discovery logic to request object\n * @param [object] request\n * @api private\n */\n\n\nfunction discoverEndpoint(request, done) {\n  var service = request.service || {};\n  if (hasCustomEndpoint(service) || request.isPresigned()) return done();\n  var operations = service.api.operations || {};\n  var operationModel = operations[request.operation];\n  var isEndpointDiscoveryRequired = operationModel ? operationModel.endpointDiscoveryRequired : 'NULL';\n  var isEnabled = resolveEndpointDiscoveryConfig(request);\n  var hasRequiredEndpointDiscovery = service.api.hasRequiredEndpointDiscovery;\n\n  if (isEnabled || hasRequiredEndpointDiscovery) {\n    // Once a customer enables endpoint discovery, the SDK should start appending\n    // the string endpoint-discovery to the user-agent on all requests.\n    request.httpRequest.appendToUserAgent('endpoint-discovery');\n  }\n\n  switch (isEndpointDiscoveryRequired) {\n    case 'OPTIONAL':\n      if (isEnabled || hasRequiredEndpointDiscovery) {\n        // For a given service; if at least one operation requires endpoint discovery then the SDK must enable endpoint discovery\n        // by default for all operations of that service, including operations where endpoint discovery is optional.\n        optionalDiscoverEndpoint(request);\n        request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      }\n\n      done();\n      break;\n\n    case 'REQUIRED':\n      if (isEnabled === false) {\n        // For a given operation; if endpoint discovery is required and it has been disabled on the SDK client,\n        // then the SDK must return a clear and actionable exception.\n        request.response.error = util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'Endpoint Discovery is disabled but ' + service.api.className + '.' + request.operation + '() requires it. Please check your configurations.'\n        });\n        done();\n        break;\n      }\n\n      request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      requiredDiscoverEndpoint(request, done);\n      break;\n\n    case 'NULL':\n    default:\n      done();\n      break;\n  }\n}\n\nmodule.exports = {\n  discoverEndpoint: discoverEndpoint,\n  requiredDiscoverEndpoint: requiredDiscoverEndpoint,\n  optionalDiscoverEndpoint: optionalDiscoverEndpoint,\n  marshallCustomIdentifiers: marshallCustomIdentifiers,\n  getCacheKey: getCacheKey,\n  invalidateCachedEndpoint: invalidateCachedEndpoints\n};","map":{"version":3,"names":["AWS","require","util","endpointDiscoveryEnabledEnvs","getCacheKey","request","service","api","operations","identifiers","config","region","serviceId","credentials","accessKeyId","marshallCustomIdentifiersHelper","result","params","shape","undefined","type","required","length","arrayEach","name","memberShape","members","endpointDiscoveryId","locationName","isLocationName","String","marshallCustomIdentifiers","optionalDiscoverEndpoint","operationModel","operation","inputShape","input","cacheKey","Object","keys","update","endpoints","endpointCache","get","Address","httpRequest","updateEndpoint","endpointRequest","makeRequest","endpointOperation","Operation","Identifiers","addApiVersionHeader","removeListener","EventListeners","Core","VALIDATE_PARAMETERS","RETRY_CHECK","put","CachePeriodInMinutes","send","err","data","Endpoints","requestQueue","requiredDiscoverEndpoint","done","cacheKeyStr","EndpointCache","getKeyString","push","callback","response","error","retryable","remove","pendingRequests","requestContext","apiVersion","headers","invalidateCachedEndpoints","httpResponse","code","statusCode","hasCustomEndpoint","client","_originalConfig","endpoint","endpointDiscoveryEnabled","Error","message","svcConfig","serviceIdentifier","Boolean","isFalsy","value","indexOf","resolveEndpointDiscoveryConfig","isBrowser","i","env","prototype","hasOwnProperty","call","process","configFile","iniLoader","loadFrom","isConfig","filename","sharedConfigFileEnv","e","sharedFileConfig","AWS_PROFILE","defaultProfile","endpoint_discovery_enabled","discoverEndpoint","isPresigned","isEndpointDiscoveryRequired","endpointDiscoveryRequired","isEnabled","hasRequiredEndpointDiscovery","appendToUserAgent","addNamedListener","className","module","exports","invalidateCachedEndpoint"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/node_modules/aws-sdk/lib/discover_endpoint.js"],"sourcesContent":["var AWS = require('./core');\nvar util = require('./util');\nvar endpointDiscoveryEnabledEnvs = ['AWS_ENABLE_ENDPOINT_DISCOVERY', 'AWS_ENDPOINT_DISCOVERY_ENABLED'];\n\n/**\n * Generate key (except resources and operation part) to index the endpoints in the cache\n * If input shape has endpointdiscoveryid trait then use\n *   accessKey + operation + resources + region + service as cache key\n * If input shape doesn't have endpointdiscoveryid trait then use\n *   accessKey + region + service as cache key\n * @return [map<String,String>] object with keys to index endpoints.\n * @api private\n */\nfunction getCacheKey(request) {\n  var service = request.service;\n  var api = service.api || {};\n  var operations = api.operations;\n  var identifiers = {};\n  if (service.config.region) {\n    identifiers.region = service.config.region;\n  }\n  if (api.serviceId) {\n    identifiers.serviceId = api.serviceId;\n  }\n  if (service.config.credentials.accessKeyId) {\n    identifiers.accessKeyId = service.config.credentials.accessKeyId;\n  }\n  return identifiers;\n}\n\n/**\n * Recursive helper for marshallCustomIdentifiers().\n * Looks for required string input members that have 'endpointdiscoveryid' trait.\n * @api private\n */\nfunction marshallCustomIdentifiersHelper(result, params, shape) {\n  if (!shape || params === undefined || params === null) return;\n  if (shape.type === 'structure' && shape.required && shape.required.length > 0) {\n    util.arrayEach(shape.required, function(name) {\n      var memberShape = shape.members[name];\n      if (memberShape.endpointDiscoveryId === true) {\n        var locationName = memberShape.isLocationName ? memberShape.name : name;\n        result[locationName] = String(params[name]);\n      } else {\n        marshallCustomIdentifiersHelper(result, params[name], memberShape);\n      }\n    });\n  }\n}\n\n/**\n * Get custom identifiers for cache key.\n * Identifies custom identifiers by checking each shape's `endpointDiscoveryId` trait.\n * @param [object] request object\n * @param [object] input shape of the given operation's api\n * @api private\n */\nfunction marshallCustomIdentifiers(request, shape) {\n  var identifiers = {};\n  marshallCustomIdentifiersHelper(identifiers, request.params, shape);\n  return identifiers;\n}\n\n/**\n * Call endpoint discovery operation when it's optional.\n * When endpoint is available in cache then use the cached endpoints. If endpoints\n * are unavailable then use regional endpoints and call endpoint discovery operation\n * asynchronously. This is turned off by default.\n * @param [object] request object\n * @api private\n */\nfunction optionalDiscoverEndpoint(request) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var endpoints = AWS.endpointCache.get(cacheKey);\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //or endpoint operation just failed in 1 minute\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    //found endpoint record from cache\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n  } else {\n    //endpoint record not in cache or outdated. make discovery operation\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    addApiVersionHeader(endpointRequest);\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    endpointRequest.removeListener('retry', AWS.EventListeners.Core.RETRY_CHECK);\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKey, [{\n      Address: '',\n      CachePeriodInMinutes: 1\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (data && data.Endpoints) {\n        AWS.endpointCache.put(cacheKey, data.Endpoints);\n      } else if (err) {\n        AWS.endpointCache.put(cacheKey, [{\n          Address: '',\n          CachePeriodInMinutes: 1 //not to make more endpoint operation in next 1 minute\n        }]);\n      }\n    });\n  }\n}\n\nvar requestQueue = {};\n\n/**\n * Call endpoint discovery operation when it's required.\n * When endpoint is available in cache then use cached ones. If endpoints are\n * unavailable then SDK should call endpoint operation then use returned new\n * endpoint for the api call. SDK will automatically attempt to do endpoint\n * discovery. This is turned off by default\n * @param [object] request object\n * @api private\n */\nfunction requiredDiscoverEndpoint(request, done) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var cacheKeyStr = AWS.EndpointCache.getKeyString(cacheKey);\n  var endpoints = AWS.endpointCache.get(cacheKeyStr); //endpoint cache also accepts string keys\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //push request object to a pending queue\n    if (!requestQueue[cacheKeyStr]) requestQueue[cacheKeyStr] = [];\n    requestQueue[cacheKeyStr].push({request: request, callback: done});\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n    done();\n  } else {\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    addApiVersionHeader(endpointRequest);\n\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKeyStr, [{\n      Address: '',\n      CachePeriodInMinutes: 60 //long-live cache\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (err) {\n        request.response.error = util.error(err, { retryable: false });\n        AWS.endpointCache.remove(cacheKey);\n\n        //fail all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.response.error = util.error(err, { retryable: false });\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      } else if (data) {\n        AWS.endpointCache.put(cacheKeyStr, data.Endpoints);\n        request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n\n        //update the endpoint for all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      }\n      done();\n    });\n  }\n}\n\n/**\n * add api version header to endpoint operation\n * @api private\n */\nfunction addApiVersionHeader(endpointRequest) {\n  var api = endpointRequest.service.api;\n  var apiVersion = api.apiVersion;\n  if (apiVersion && !endpointRequest.httpRequest.headers['x-amz-api-version']) {\n    endpointRequest.httpRequest.headers['x-amz-api-version'] = apiVersion;\n  }\n}\n\n/**\n * If api call gets invalid endpoint exception, SDK should attempt to remove the invalid\n * endpoint from cache.\n * @api private\n */\nfunction invalidateCachedEndpoints(response) {\n  var error = response.error;\n  var httpResponse = response.httpResponse;\n  if (error &&\n    (error.code === 'InvalidEndpointException' || httpResponse.statusCode === 421)\n  ) {\n    var request = response.request;\n    var operations = request.service.api.operations || {};\n    var inputShape = operations[request.operation] ? operations[request.operation].input : undefined;\n    var identifiers = marshallCustomIdentifiers(request, inputShape);\n    var cacheKey = getCacheKey(request);\n    if (Object.keys(identifiers).length > 0) {\n      cacheKey = util.update(cacheKey, identifiers);\n      if (operations[request.operation]) cacheKey.operation = operations[request.operation].name;\n    }\n    AWS.endpointCache.remove(cacheKey);\n  }\n}\n\n/**\n * If endpoint is explicitly configured, SDK should not do endpoint discovery in anytime.\n * @param [object] client Service client object.\n * @api private\n */\nfunction hasCustomEndpoint(client) {\n  //if set endpoint is set for specific client, enable endpoint discovery will raise an error.\n  if (client._originalConfig && client._originalConfig.endpoint && client._originalConfig.endpointDiscoveryEnabled === true) {\n    throw util.error(new Error(), {\n      code: 'ConfigurationException',\n      message: 'Custom endpoint is supplied; endpointDiscoveryEnabled must not be true.'\n    });\n  };\n  var svcConfig = AWS.config[client.serviceIdentifier] || {};\n  return Boolean(AWS.config.endpoint || svcConfig.endpoint || (client._originalConfig && client._originalConfig.endpoint));\n}\n\n/**\n * @api private\n */\nfunction isFalsy(value) {\n  return ['false', '0'].indexOf(value) >= 0;\n}\n\n/**\n * If endpoint discovery should perform for this request when no operation requires endpoint\n * discovery for the given service.\n * SDK performs config resolution in order like below:\n * 1. If set in client configuration.\n * 2. If set in env AWS_ENABLE_ENDPOINT_DISCOVERY.\n * 3. If set in shared ini config file with key 'endpoint_discovery_enabled'.\n * @param [object] request request object.\n * @returns [boolean|undefined] if endpoint discovery config is not set in any source, this\n *  function returns undefined\n * @api private\n */\nfunction resolveEndpointDiscoveryConfig(request) {\n  var service = request.service || {};\n  if (service.config.endpointDiscoveryEnabled !== undefined) {\n    return service.config.endpointDiscoveryEnabled;\n  }\n\n  //shared ini file is only available in Node\n  //not to check env in browser\n  if (util.isBrowser()) return undefined;\n\n  // If any of recognized endpoint discovery config env is set\n  for (var i = 0; i < endpointDiscoveryEnabledEnvs.length; i++) {\n    var env = endpointDiscoveryEnabledEnvs[i];\n    if (Object.prototype.hasOwnProperty.call(process.env, env)) {\n      if (process.env[env] === '' || process.env[env] === undefined) {\n        throw util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'environmental variable ' + env + ' cannot be set to nothing'\n        });\n      }\n      return !isFalsy(process.env[env]);\n    }\n  }\n\n  var configFile = {};\n  try {\n    configFile = AWS.util.iniLoader ? AWS.util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[AWS.util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n  var sharedFileConfig = configFile[\n    process.env.AWS_PROFILE || AWS.util.defaultProfile\n  ] || {};\n  if (Object.prototype.hasOwnProperty.call(sharedFileConfig, 'endpoint_discovery_enabled')) {\n    if (sharedFileConfig.endpoint_discovery_enabled === undefined) {\n      throw util.error(new Error(), {\n        code: 'ConfigurationException',\n        message: 'config file entry \\'endpoint_discovery_enabled\\' cannot be set to nothing'\n      });\n    }\n    return !isFalsy(sharedFileConfig.endpoint_discovery_enabled);\n  }\n  return undefined;\n}\n\n/**\n * attach endpoint discovery logic to request object\n * @param [object] request\n * @api private\n */\nfunction discoverEndpoint(request, done) {\n  var service = request.service || {};\n  if (hasCustomEndpoint(service) || request.isPresigned()) return done();\n\n  var operations = service.api.operations || {};\n  var operationModel = operations[request.operation];\n  var isEndpointDiscoveryRequired = operationModel ? operationModel.endpointDiscoveryRequired : 'NULL';\n  var isEnabled = resolveEndpointDiscoveryConfig(request);\n  var hasRequiredEndpointDiscovery = service.api.hasRequiredEndpointDiscovery;\n  if (isEnabled || hasRequiredEndpointDiscovery) {\n    // Once a customer enables endpoint discovery, the SDK should start appending\n    // the string endpoint-discovery to the user-agent on all requests.\n    request.httpRequest.appendToUserAgent('endpoint-discovery');\n  }\n  switch (isEndpointDiscoveryRequired) {\n    case 'OPTIONAL':\n      if (isEnabled || hasRequiredEndpointDiscovery) {\n        // For a given service; if at least one operation requires endpoint discovery then the SDK must enable endpoint discovery\n        // by default for all operations of that service, including operations where endpoint discovery is optional.\n        optionalDiscoverEndpoint(request);\n        request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      }\n      done();\n      break;\n    case 'REQUIRED':\n      if (isEnabled === false) {\n        // For a given operation; if endpoint discovery is required and it has been disabled on the SDK client,\n        // then the SDK must return a clear and actionable exception.\n        request.response.error = util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'Endpoint Discovery is disabled but ' + service.api.className + '.' + request.operation +\n                    '() requires it. Please check your configurations.'\n        });\n        done();\n        break;\n      }\n      request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      requiredDiscoverEndpoint(request, done);\n      break;\n    case 'NULL':\n    default:\n      done();\n      break;\n  }\n}\n\nmodule.exports = {\n  discoverEndpoint: discoverEndpoint,\n  requiredDiscoverEndpoint: requiredDiscoverEndpoint,\n  optionalDiscoverEndpoint: optionalDiscoverEndpoint,\n  marshallCustomIdentifiers: marshallCustomIdentifiers,\n  getCacheKey: getCacheKey,\n  invalidateCachedEndpoint: invalidateCachedEndpoints,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}