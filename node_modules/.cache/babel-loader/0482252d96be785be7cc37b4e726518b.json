{"ast":null,"code":"var _jsxFileName = \"/Users/lazarbogdan/test/medicacasa-frontend/medicacasa-frontend/src/services/UploadImageToS3WithNativeSdk.js\";\nimport React, { useState } from 'react';\nimport AWS from 'aws-sdk';\nconst S3_BUCKET = 'mydoctorbucket/profilePhotos';\nconst REGION = 'eu-central-1';\nAWS.config.update({\n  accessKeyId: 'AKIAVB5RGJ3ADZMXXRXI',\n  secretAccessKey: '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'\n});\nconst myBucket = new AWS.S3({\n  params: {\n    Bucket: S3_BUCKET\n  },\n  region: REGION\n});\n\nconst UploadImageToS3WithNativeSdk = () => {\n  const [progress, setProgress] = useState(0);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileInput = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const uploadFile = file => {\n    console.log(file.name);\n    const params = {\n      ACL: 'public-read',\n      Body: file,\n      Bucket: S3_BUCKET,\n      Key: file.name\n    };\n    myBucket.putObject(params).on('httpUploadProgress', evt => {\n      setProgress(Math.round(evt.loaded / evt.total * 100));\n    }).send(err => {\n      if (err) console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Native SDK File Upload Progress is \", progress, \"%\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleFileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => uploadFile(selectedFile),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \" Upload to S3\"));\n};\n\nexport default UploadImageToS3WithNativeSdk;","map":{"version":3,"names":["React","useState","AWS","S3_BUCKET","REGION","config","update","accessKeyId","secretAccessKey","myBucket","S3","params","Bucket","region","UploadImageToS3WithNativeSdk","progress","setProgress","selectedFile","setSelectedFile","handleFileInput","e","target","files","uploadFile","file","console","log","name","ACL","Body","Key","putObject","on","evt","Math","round","loaded","total","send","err"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/medicacasa-frontend/src/services/UploadImageToS3WithNativeSdk.js"],"sourcesContent":["import React ,{useState} from 'react';\nimport AWS from 'aws-sdk'\n\nconst S3_BUCKET ='mydoctorbucket/profilePhotos';\nconst REGION ='eu-central-1';\n\n\nAWS.config.update({\n    accessKeyId: 'AKIAVB5RGJ3ADZMXXRXI',\n    secretAccessKey: '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'\n})\n\nconst myBucket = new AWS.S3({\n    params: { Bucket: S3_BUCKET},\n    region: REGION,\n})\n\nconst UploadImageToS3WithNativeSdk = () => {\n\n    const [progress , setProgress] = useState(0);\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    const handleFileInput = (e) => {\n        setSelectedFile(e.target.files[0]);\n    }\n\n    const uploadFile = (file) => {\n\n        console.log(file.name);\n        const params = {\n            ACL: 'public-read',\n            Body: file,\n            Bucket: S3_BUCKET,\n            Key: file.name\n        };\n\n        myBucket.putObject(params)\n            .on('httpUploadProgress', (evt) => {\n                setProgress(Math.round((evt.loaded / evt.total) * 100))\n            })\n            .send((err) => {\n                if (err) console.log(err)\n            })\n    }\n\n\n    return <div>\n        <div>Native SDK File Upload Progress is {progress}%</div>\n        <input type=\"file\" onChange={handleFileInput}/>\n        <button onClick={() => uploadFile(selectedFile)}> Upload to S3</button>\n    </div>\n}\n\nexport default UploadImageToS3WithNativeSdk;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,SAAhB;AAEA,MAAMC,SAAS,GAAE,8BAAjB;AACA,MAAMC,MAAM,GAAE,cAAd;AAGAF,GAAG,CAACG,MAAJ,CAAWC,MAAX,CAAkB;EACdC,WAAW,EAAE,sBADC;EAEdC,eAAe,EAAE;AAFH,CAAlB;AAKA,MAAMC,QAAQ,GAAG,IAAIP,GAAG,CAACQ,EAAR,CAAW;EACxBC,MAAM,EAAE;IAAEC,MAAM,EAAET;EAAV,CADgB;EAExBU,MAAM,EAAET;AAFgB,CAAX,CAAjB;;AAKA,MAAMU,4BAA4B,GAAG,MAAM;EAEvC,MAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2Bf,QAAQ,CAAC,CAAD,CAAzC;EACA,MAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,IAAD,CAAhD;;EAEA,MAAMkB,eAAe,GAAIC,CAAD,IAAO;IAC3BF,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAf;EACH,CAFD;;EAIA,MAAMC,UAAU,GAAIC,IAAD,IAAU;IAEzBC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;IACA,MAAMhB,MAAM,GAAG;MACXiB,GAAG,EAAE,aADM;MAEXC,IAAI,EAAEL,IAFK;MAGXZ,MAAM,EAAET,SAHG;MAIX2B,GAAG,EAAEN,IAAI,CAACG;IAJC,CAAf;IAOAlB,QAAQ,CAACsB,SAAT,CAAmBpB,MAAnB,EACKqB,EADL,CACQ,oBADR,EAC+BC,GAAD,IAAS;MAC/BjB,WAAW,CAACkB,IAAI,CAACC,KAAL,CAAYF,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACI,KAAlB,GAA2B,GAAtC,CAAD,CAAX;IACH,CAHL,EAIKC,IAJL,CAIWC,GAAD,IAAS;MACX,IAAIA,GAAJ,EAASd,OAAO,CAACC,GAAR,CAAYa,GAAZ;IACZ,CANL;EAOH,CAjBD;;EAoBA,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0CAAyCxB,QAAzC,MADG,eAEH;IAAO,IAAI,EAAC,MAAZ;IAAmB,QAAQ,EAAEI,eAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFG,eAGH;IAAQ,OAAO,EAAE,MAAMI,UAAU,CAACN,YAAD,CAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAHG,CAAP;AAKH,CAlCD;;AAoCA,eAAeH,4BAAf"},"metadata":{},"sourceType":"module"}