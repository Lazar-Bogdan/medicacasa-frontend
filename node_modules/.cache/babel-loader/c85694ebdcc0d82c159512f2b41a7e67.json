{"ast":null,"code":"var AWS = require('../core');\n\nvar inherit = AWS.util.inherit;\n/**\n * @api private\n */\n\nvar expiresHeader = 'presigned-expires';\n/**\n * @api private\n */\n\nfunction signedUrlBuilder(request) {\n  var expires = request.httpRequest.headers[expiresHeader];\n  var signerClass = request.service.getSignerClass(request);\n  delete request.httpRequest.headers['User-Agent'];\n  delete request.httpRequest.headers['X-Amz-User-Agent'];\n\n  if (signerClass === AWS.Signers.V4) {\n    if (expires > 604800) {\n      // one week expiry is invalid\n      var message = 'Presigning does not support expiry time greater ' + 'than a week with SigV4 signing.';\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidExpiryTime',\n        message: message,\n        retryable: false\n      });\n    }\n\n    request.httpRequest.headers[expiresHeader] = expires;\n  } else if (signerClass === AWS.Signers.S3) {\n    var now = request.service ? request.service.getSkewCorrectedDate() : AWS.util.date.getDate();\n    request.httpRequest.headers[expiresHeader] = parseInt(AWS.util.date.unixTimestamp(now) + expires, 10).toString();\n  } else {\n    throw AWS.util.error(new Error(), {\n      message: 'Presigning only supports S3 or SigV4 signing.',\n      code: 'UnsupportedSigner',\n      retryable: false\n    });\n  }\n}\n/**\n * @api private\n */\n\n\nfunction signedUrlSigner(request) {\n  var endpoint = request.httpRequest.endpoint;\n  var parsedUrl = AWS.util.urlParse(request.httpRequest.path);\n  var queryParams = {};\n\n  if (parsedUrl.search) {\n    queryParams = AWS.util.queryStringParse(parsedUrl.search.substr(1));\n  }\n\n  var auth = request.httpRequest.headers['Authorization'].split(' ');\n\n  if (auth[0] === 'AWS') {\n    auth = auth[1].split(':');\n    queryParams['Signature'] = auth.pop();\n    queryParams['AWSAccessKeyId'] = auth.join(':');\n    AWS.util.each(request.httpRequest.headers, function (key, value) {\n      if (key === expiresHeader) key = 'Expires';\n\n      if (key.indexOf('x-amz-meta-') === 0) {\n        // Delete existing, potentially not normalized key\n        delete queryParams[key];\n        key = key.toLowerCase();\n      }\n\n      queryParams[key] = value;\n    });\n    delete request.httpRequest.headers[expiresHeader];\n    delete queryParams['Authorization'];\n    delete queryParams['Host'];\n  } else if (auth[0] === 'AWS4-HMAC-SHA256') {\n    // SigV4 signing\n    auth.shift();\n    var rest = auth.join(' ');\n    var signature = rest.match(/Signature=(.*?)(?:,|\\s|\\r?\\n|$)/)[1];\n    queryParams['X-Amz-Signature'] = signature;\n    delete queryParams['Expires'];\n  } // build URL\n\n\n  endpoint.pathname = parsedUrl.pathname;\n  endpoint.search = AWS.util.queryParamsToString(queryParams);\n}\n/**\n * @api private\n */\n\n\nAWS.Signers.Presign = inherit({\n  /**\n   * @api private\n   */\n  sign: function sign(request, expireTime, callback) {\n    request.httpRequest.headers[expiresHeader] = expireTime || 3600;\n    request.on('build', signedUrlBuilder);\n    request.on('sign', signedUrlSigner);\n    request.removeListener('afterBuild', AWS.EventListeners.Core.SET_CONTENT_LENGTH);\n    request.removeListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n    request.emit('beforePresign', [request]);\n\n    if (callback) {\n      request.build(function () {\n        if (this.response.error) callback(this.response.error);else {\n          callback(null, AWS.util.urlFormat(request.httpRequest.endpoint));\n        }\n      });\n    } else {\n      request.build();\n      if (request.response.error) throw request.response.error;\n      return AWS.util.urlFormat(request.httpRequest.endpoint);\n    }\n  }\n});\n/**\n * @api private\n */\n\nmodule.exports = AWS.Signers.Presign;","map":{"version":3,"names":["AWS","require","inherit","util","expiresHeader","signedUrlBuilder","request","expires","httpRequest","headers","signerClass","service","getSignerClass","Signers","V4","message","error","Error","code","retryable","S3","now","getSkewCorrectedDate","date","getDate","parseInt","unixTimestamp","toString","signedUrlSigner","endpoint","parsedUrl","urlParse","path","queryParams","search","queryStringParse","substr","auth","split","pop","join","each","key","value","indexOf","toLowerCase","shift","rest","signature","match","pathname","queryParamsToString","Presign","sign","expireTime","callback","on","removeListener","EventListeners","Core","SET_CONTENT_LENGTH","COMPUTE_SHA256","emit","build","response","urlFormat","module","exports"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/medicacasa-frontend/node_modules/aws-sdk/lib/signers/presign.js"],"sourcesContent":["var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nfunction signedUrlBuilder(request) {\n  var expires = request.httpRequest.headers[expiresHeader];\n  var signerClass = request.service.getSignerClass(request);\n\n  delete request.httpRequest.headers['User-Agent'];\n  delete request.httpRequest.headers['X-Amz-User-Agent'];\n\n  if (signerClass === AWS.Signers.V4) {\n    if (expires > 604800) { // one week expiry is invalid\n      var message = 'Presigning does not support expiry time greater ' +\n                    'than a week with SigV4 signing.';\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidExpiryTime', message: message, retryable: false\n      });\n    }\n    request.httpRequest.headers[expiresHeader] = expires;\n  } else if (signerClass === AWS.Signers.S3) {\n    var now = request.service ? request.service.getSkewCorrectedDate() : AWS.util.date.getDate();\n    request.httpRequest.headers[expiresHeader] = parseInt(\n      AWS.util.date.unixTimestamp(now) + expires, 10).toString();\n  } else {\n    throw AWS.util.error(new Error(), {\n      message: 'Presigning only supports S3 or SigV4 signing.',\n      code: 'UnsupportedSigner', retryable: false\n    });\n  }\n}\n\n/**\n * @api private\n */\nfunction signedUrlSigner(request) {\n  var endpoint = request.httpRequest.endpoint;\n  var parsedUrl = AWS.util.urlParse(request.httpRequest.path);\n  var queryParams = {};\n\n  if (parsedUrl.search) {\n    queryParams = AWS.util.queryStringParse(parsedUrl.search.substr(1));\n  }\n\n  var auth = request.httpRequest.headers['Authorization'].split(' ');\n  if (auth[0] === 'AWS') {\n    auth = auth[1].split(':');\n    queryParams['Signature'] = auth.pop();\n    queryParams['AWSAccessKeyId'] = auth.join(':');\n\n    AWS.util.each(request.httpRequest.headers, function (key, value) {\n      if (key === expiresHeader) key = 'Expires';\n      if (key.indexOf('x-amz-meta-') === 0) {\n        // Delete existing, potentially not normalized key\n        delete queryParams[key];\n        key = key.toLowerCase();\n      }\n      queryParams[key] = value;\n    });\n    delete request.httpRequest.headers[expiresHeader];\n    delete queryParams['Authorization'];\n    delete queryParams['Host'];\n  } else if (auth[0] === 'AWS4-HMAC-SHA256') { // SigV4 signing\n    auth.shift();\n    var rest = auth.join(' ');\n    var signature = rest.match(/Signature=(.*?)(?:,|\\s|\\r?\\n|$)/)[1];\n    queryParams['X-Amz-Signature'] = signature;\n    delete queryParams['Expires'];\n  }\n\n  // build URL\n  endpoint.pathname = parsedUrl.pathname;\n  endpoint.search = AWS.util.queryParamsToString(queryParams);\n}\n\n/**\n * @api private\n */\nAWS.Signers.Presign = inherit({\n  /**\n   * @api private\n   */\n  sign: function sign(request, expireTime, callback) {\n    request.httpRequest.headers[expiresHeader] = expireTime || 3600;\n    request.on('build', signedUrlBuilder);\n    request.on('sign', signedUrlSigner);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.SET_CONTENT_LENGTH);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.COMPUTE_SHA256);\n\n    request.emit('beforePresign', [request]);\n\n    if (callback) {\n      request.build(function() {\n        if (this.response.error) callback(this.response.error);\n        else {\n          callback(null, AWS.util.urlFormat(request.httpRequest.endpoint));\n        }\n      });\n    } else {\n      request.build();\n      if (request.response.error) throw request.response.error;\n      return AWS.util.urlFormat(request.httpRequest.endpoint);\n    }\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.Presign;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}