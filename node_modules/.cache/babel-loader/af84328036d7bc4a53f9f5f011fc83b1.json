{"ast":null,"code":"import axios from \"axios\";\nimport URL from \"./BackEndURL\";\n\nclass MyClientsService {\n  async getMyClientsUnderDoctorEmail(email, month, year, day) {\n    // try{\n    //     const response = await axios.get(URL + \"App/getAppUnderEmail\", { headers: {doctoremail:email, month:month, year:year, day:day}});\n    //     return response.data;\n    // }catch(err){\n    //     console.error(\"Error\", err.response);\n    //     return false;\n    // }\n    let x;\n    await fetch(URL + \"App/getAppUnderEmail\", {\n      method: 'GET',\n      headers: {\n        doctoremail: email,\n        month: month,\n        year: year,\n        day: day\n      }\n    }).then(response => response.json()).then(response => {\n      x = response;\n    }).catch(err => {\n      x = err;\n      console.error(err);\n    });\n    return x;\n  }\n\n  async getDoctorAppUnderAddAppAdmin(doctoremail, year, month, day) {\n    // try{\n    //     const response = await axios.get(URL + \"App/getDoctorApp\", { headers: {doctoremail:doctoremail, month:month, year:year, day:day}});\n    //     return response.data;\n    // }catch(err){\n    //     console.error(\"Error\", err.response);\n    //     return false;\n    // } \n    let x;\n    await fetch(URL + \"App/getDoctorApp\", {\n      method: 'GET',\n      headers: {\n        doctoremail: doctoremail,\n        month: month,\n        year: year,\n        day: day\n      }\n    }).then(response => response.json()).then(response => {\n      x = response;\n    }).catch(err => {\n      x = err;\n      console.error(err);\n    });\n    return x;\n  }\n\n  async getAllApp() {\n    // try{\n    //     const response = await axios.get(URL + \"App/getAllApp\");\n    //     return response.data;\n    // }catch(err){\n    //     console.error(\"Error\", err.response);\n    //     return false;\n    // }\n    let x;\n    await fetch(URL + \"App/getAllApp\", {\n      method: 'GET',\n      headers: {}\n    }).then(response => response.json()).then(response => {\n      x = response;\n    }).catch(err => {\n      x = err;\n      console.error(err);\n    });\n    return x;\n  }\n\n  async deleteApp(id) {\n    // try{\n    //     const response = await axios.delete(URL + \"App/deleteApp\", {headers:{_id:id}});\n    //     return response.data;\n    // }catch(err){\n    //     console.error(\"Error\", err.response);\n    //     return false;\n    // }\n    let x;\n    await fetch(URL + \"App/deleteApp\", {\n      method: 'DELETE',\n      headers: {\n        _id: id\n      }\n    }).then(response => response.json()).then(response => {\n      x = response;\n    }).catch(err => {\n      x = err;\n      console.error(err);\n    });\n    return x;\n  }\n\n  async addApp(doctoremail, clients, day, hour, month, year) {\n    // try{\n    //     const response = await axios.post(URL + \"App/addApp\", {doctoremail:doctoremail,clients:clients,day:day,hour:hour, month:month, year:year})\n    //     return response.data;\n    // }catch(err){\n    //     console.error(\"Error\", err.response);\n    //     return false;\n    // }\n    let x;\n    await fetch(URL + \"App/addApp\", {\n      method: 'POST',\n      headers: {\n        doctoremail: doctoremail,\n        clients: clients,\n        day: day,\n        hour: hour,\n        month: month,\n        year: year\n      },\n      body: {\n        doctoremail: doctoremail,\n        clients: clients,\n        day: day,\n        hour: hour,\n        month: month,\n        year: year\n      }\n    }).then(response => response.json()).then(response => {\n      x = response;\n    }).catch(err => {\n      x = err;\n      console.error(err);\n    });\n    return x;\n  }\n\n}\n\nexport default new MyClientsService();","map":{"version":3,"names":["axios","URL","MyClientsService","getMyClientsUnderDoctorEmail","email","month","year","day","x","fetch","method","headers","doctoremail","then","response","json","catch","err","console","error","getDoctorAppUnderAddAppAdmin","getAllApp","deleteApp","id","_id","addApp","clients","hour","body"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/medicacasa-frontend/src/services/MyClientsService.js"],"sourcesContent":["import axios from \"axios\";\n\nimport URL from \"./BackEndURL\";\n\nclass MyClientsService{\n    async getMyClientsUnderDoctorEmail(email,month,year,day){\n        // try{\n        //     const response = await axios.get(URL + \"App/getAppUnderEmail\", { headers: {doctoremail:email, month:month, year:year, day:day}});\n        //     return response.data;\n        // }catch(err){\n        //     console.error(\"Error\", err.response);\n        //     return false;\n        // }\n        let x;\n        await fetch(URL + \"App/getAppUnderEmail\", {\n            method: 'GET',\n            headers: {\n                doctoremail:email, \n                month:month, \n                year:year, \n                day:day\n            }\n        })\n        .then(response => response.json())\n        .then(response => { x = response; })\n        .catch(err => { x = err; console.error(err)});\n        return x;\n    }\n\n    async getDoctorAppUnderAddAppAdmin(doctoremail,year,month,day){\n        // try{\n        //     const response = await axios.get(URL + \"App/getDoctorApp\", { headers: {doctoremail:doctoremail, month:month, year:year, day:day}});\n        //     return response.data;\n        // }catch(err){\n        //     console.error(\"Error\", err.response);\n        //     return false;\n        // } \n        let x;\n        await fetch(URL + \"App/getDoctorApp\", {\n            method: 'GET',\n            headers: {\n                doctoremail:doctoremail, \n                month:month, \n                year:year, \n                day:day\n            }\n        })\n        .then(response => response.json())\n        .then(response => { x = response; })\n        .catch(err => { x = err; console.error(err)});\n        return x;\n    }\n\n    async getAllApp(){\n        // try{\n        //     const response = await axios.get(URL + \"App/getAllApp\");\n        //     return response.data;\n        // }catch(err){\n        //     console.error(\"Error\", err.response);\n        //     return false;\n        // }\n        let x;\n        await fetch(URL + \"App/getAllApp\", {\n            method: 'GET',\n            headers: {\n\n            }\n        })\n        .then(response => response.json())\n        .then(response => { x = response; })\n        .catch(err => { x = err; console.error(err)});\n        return x;\n    }\n\n    async deleteApp(id){\n        // try{\n        //     const response = await axios.delete(URL + \"App/deleteApp\", {headers:{_id:id}});\n        //     return response.data;\n        // }catch(err){\n        //     console.error(\"Error\", err.response);\n        //     return false;\n        // }\n        let x;\n        await fetch(URL + \"App/deleteApp\", {\n            method: 'DELETE',\n            headers: {\n                _id:id\n            }\n        })\n        .then(response => response.json())\n        .then(response => { x = response; })\n        .catch(err => { x = err; console.error(err)});\n        return x;\n    }\n\n    async addApp(doctoremail,clients,day,hour,month,year){\n        // try{\n        //     const response = await axios.post(URL + \"App/addApp\", {doctoremail:doctoremail,clients:clients,day:day,hour:hour, month:month, year:year})\n        //     return response.data;\n        // }catch(err){\n        //     console.error(\"Error\", err.response);\n        //     return false;\n        // }\n        let x;\n        await fetch(URL + \"App/addApp\", {\n            method: 'POST',\n            headers: {\n                doctoremail:doctoremail,\n                clients:clients,\n                day:day,\n                hour:hour, \n                month:month, \n                year:year\n            },\n            body: {\n                doctoremail:doctoremail,\n                clients:clients,\n                day:day,\n                hour:hour, \n                month:month, \n                year:year\n            }\n        })\n        .then(response => response.json())\n        .then(response => { x = response; })\n        .catch(err => { x = err; console.error(err)});\n        return x;\n    }\n}\n\nexport default new MyClientsService;"],"mappings":"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"},"metadata":{},"sourceType":"module"}