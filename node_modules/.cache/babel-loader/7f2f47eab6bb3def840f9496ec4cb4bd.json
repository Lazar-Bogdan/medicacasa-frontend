{"ast":null,"code":"import { I } from \"@quarkly/widgets/build/cjs/prod\";\nimport axios from \"axios\";\nimport URL from \"./BackEndURL\";\n\nclass GetMedicineService {\n  async getAllMedicine() {\n    // try{\n    //     const response = await axios.get(URL + \"meds/getAllMeds\");\n    //     return response.data;\n    // }catch(err){\n    //     console.error(\"Error\", err.response);\n    //     return false;\n    // }\n    let x;\n    await fetch(URL + \"meds/getAllMeds\", {\n      method: 'GET',\n      headers: {}\n    }).then(response => response.json()).then(response => {\n      x = response;\n    }).catch(err => {\n      x = err;\n      console.error(err);\n    });\n    return x;\n  }\n\n  async addMeds(name, price, desc, img) {\n    // try{\n    //     const response = await axios.post(URL + \"meds/addMeds\",{name:name,price:price,description:desc,img:img})\n    //     return response.data\n    // }catch(err){\n    //     console.error(\"Error\", err.response);\n    //     return false;\n    // }\n    let x;\n    await fetch(URL + \"meds/addMeds\", {\n      method: 'POST',\n      headers: {\n        name: name,\n        price: price,\n        description: desc,\n        img: img\n      },\n      body: {\n        name: name,\n        price: price,\n        description: desc,\n        img: img\n      }\n    }).then(response => response.json()).then(response => {\n      x = response;\n    }).catch(err => {\n      x = err;\n      console.error(err);\n    });\n    return x;\n  }\n\n  async deleteMeds(id) {\n    // try{\n    //     const response = await axios.delete(URL + \"meds/removeMeds\", {headers:{_id:id}})\n    //     return response.data;\n    // }catch(err){\n    //     console.error(\"Error\", err.response);\n    //     return false;\n    // }\n    let x;\n    await fetch(URL + \"meds/removeMeds\", {\n      method: 'DELETE',\n      headers: {\n        _id: id\n      },\n      body: {}\n    }).then(response => response.json()).then(response => {\n      x = response;\n    }).catch(err => {\n      x = err;\n      console.error(err);\n    });\n    return x;\n  }\n\n  async getMedsById(id) {\n    // try{\n    //     const response = await axios.get(URL + \"meds/getMedsUnderCondition\", {headers:{_id:id}})\n    //     return response.data;\n    // }catch(err){\n    //     console.error(\"Error\", err.response);\n    //     return false;\n    // }\n    let x;\n    await fetch(URL + \"meds/getMedsUnderCondition\", {\n      method: 'GET',\n      headers: {\n        _id: id\n      }\n    }).then(response => response.json()).then(response => {\n      x = response;\n    }).catch(err => {\n      x = err;\n      console.error(err);\n    });\n    return x;\n  }\n\n  async editMed(id, name, price, description, img) {\n    // try{\n    //     const response = await axios.put(URL + \"meds/editMeds\", {_id:id,name:name,price:price,description:description,img:img});\n    //     return response.data;\n    // }catch(err){\n    //     console.error(\"Error\", err.response);\n    //     return false;\n    // }\n    console.log(\"service\");\n    console.log(id);\n    let x;\n    await fetch(URL + \"meds/editMeds\", {\n      method: 'PUT',\n      headers: {\n        _id: id,\n        name: name,\n        price: price,\n        description: description,\n        img: img\n      },\n      body: {\n        _id: id,\n        name: name,\n        price: price,\n        description: description,\n        img: img\n      }\n    }).then(response => response.json()).then(response => {\n      x = response;\n    }).catch(err => {\n      x = err;\n      console.error(err);\n    });\n    return x;\n  }\n\n}\n\nexport default new GetMedicineService();","map":{"version":3,"names":["I","axios","URL","GetMedicineService","getAllMedicine","x","fetch","method","headers","then","response","json","catch","err","console","error","addMeds","name","price","desc","img","description","body","deleteMeds","id","_id","getMedsById","editMed","log"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/src/services/GetMedicineService.js"],"sourcesContent":["import { I } from \"@quarkly/widgets/build/cjs/prod\";\nimport axios from \"axios\";\n\nimport URL from \"./BackEndURL\"\n\nclass GetMedicineService{\n    async getAllMedicine(){\n        // try{\n        //     const response = await axios.get(URL + \"meds/getAllMeds\");\n        //     return response.data;\n        // }catch(err){\n        //     console.error(\"Error\", err.response);\n        //     return false;\n        // }\n        let x;\n        await fetch(URL + \"meds/getAllMeds\", {\n            method: 'GET',\n            headers: {\n\n            }\n        })\n        .then(response => response.json())\n        .then(response => { x = response; })\n        .catch(err => { x = err; console.error(err)});\n        return x;\n    }\n    \n    async addMeds(name,price,desc,img){\n        // try{\n        //     const response = await axios.post(URL + \"meds/addMeds\",{name:name,price:price,description:desc,img:img})\n        //     return response.data\n        // }catch(err){\n        //     console.error(\"Error\", err.response);\n        //     return false;\n        // }\n        let x;\n        await fetch(URL + \"meds/addMeds\", {\n            method: 'POST',\n            headers: {\n                name:name,\n                price:price,\n                description:desc,\n                img:img\n            },\n            body: {\n                name:name,\n                price:price,\n                description:desc,\n                img:img\n            }\n        })\n        .then(response => response.json())\n        .then(response => { x = response; })\n        .catch(err => { x = err; console.error(err)});\n        return x;\n    }\n\n    async deleteMeds(id){\n        // try{\n        //     const response = await axios.delete(URL + \"meds/removeMeds\", {headers:{_id:id}})\n        //     return response.data;\n        // }catch(err){\n        //     console.error(\"Error\", err.response);\n        //     return false;\n        // }\n        let x;\n        await fetch(URL + \"meds/removeMeds\", {\n            method: 'DELETE',\n            headers: {\n                _id:id\n            },\n            body: {\n\n            }\n        })\n        .then(response => response.json())\n        .then(response => { x = response; })\n        .catch(err => { x = err; console.error(err)});\n        return x;\n    }\n\n    async getMedsById(id){\n        // try{\n        //     const response = await axios.get(URL + \"meds/getMedsUnderCondition\", {headers:{_id:id}})\n        //     return response.data;\n        // }catch(err){\n        //     console.error(\"Error\", err.response);\n        //     return false;\n        // }\n        let x;\n        await fetch(URL + \"meds/getMedsUnderCondition\", {\n            method: 'GET',\n            headers: {\n                _id:id\n            }\n        })\n        .then(response => response.json())\n        .then(response => { x = response; })\n        .catch(err => { x = err; console.error(err)});\n        return x;\n    }\n\n    async editMed(id,name,price,description,img){\n        // try{\n        //     const response = await axios.put(URL + \"meds/editMeds\", {_id:id,name:name,price:price,description:description,img:img});\n        //     return response.data;\n        // }catch(err){\n        //     console.error(\"Error\", err.response);\n        //     return false;\n        // }\n        console.log(\"service\");\n        console.log(id);\n        let x;\n        await fetch(URL + \"meds/editMeds\", {\n            method: 'PUT',\n            headers: {\n                _id:id,\n                name:name,\n                price:price,\n                description:description,\n                img:img\n            },\n            body: {\n                _id:id,\n                name:name,\n                price:price,\n                description:description,\n                img:img\n            }\n        })\n        .then(response => response.json())\n        .then(response => { x = response; })\n        .catch(err => { x = err; console.error(err)});\n        return x;\n    }\n}\n\nexport default new GetMedicineService;"],"mappings":"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"},"metadata":{},"sourceType":"module"}