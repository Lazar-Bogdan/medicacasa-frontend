{"ast":null,"code":"import sync from 'framesync';\nimport { copyAxisBox } from '../../../utils/geometry/index.js';\nimport { compareByDepth } from '../../utils/compare-by-depth.js';\n\nfunction isProjecting(visualElement) {\n  var isEnabled = visualElement.projection.isEnabled;\n  return isEnabled || visualElement.shouldResetTransform();\n}\n\nfunction collectProjectingAncestors(visualElement, ancestors) {\n  if (ancestors === void 0) {\n    ancestors = [];\n  }\n\n  var parent = visualElement.parent;\n  if (parent) collectProjectingAncestors(parent, ancestors);\n  if (isProjecting(visualElement)) ancestors.push(visualElement);\n  return ancestors;\n}\n\nfunction collectProjectingChildren(visualElement) {\n  var children = [];\n\n  var addChild = function (child) {\n    if (isProjecting(child)) children.push(child);\n    child.children.forEach(addChild);\n  };\n\n  visualElement.children.forEach(addChild);\n  return children.sort(compareByDepth);\n}\n/**\n * Update the layoutState by measuring the DOM layout. This\n * should be called after resetting any layout-affecting transforms.\n */\n\n\nfunction updateLayoutMeasurement(visualElement) {\n  if (visualElement.shouldResetTransform()) return;\n  var layoutState = visualElement.getLayoutState();\n  visualElement.notifyBeforeLayoutMeasure(layoutState.layout);\n  layoutState.isHydrated = true;\n  layoutState.layout = visualElement.measureViewportBox();\n  layoutState.layoutCorrected = copyAxisBox(layoutState.layout);\n  visualElement.notifyLayoutMeasure(layoutState.layout, visualElement.prevViewportBox || layoutState.layout);\n  sync.update(function () {\n    return visualElement.rebaseProjectionTarget();\n  });\n}\n/**\n * Record the viewport box as it was before an expected mutation/re-render\n */\n\n\nfunction snapshotViewportBox(visualElement) {\n  if (visualElement.shouldResetTransform()) return;\n  visualElement.prevViewportBox = visualElement.measureViewportBox(false);\n  /**\n   * Update targetBox to match the prevViewportBox. This is just to ensure\n   * that targetBox is affected by scroll in the same way as the measured box\n   */\n\n  visualElement.rebaseProjectionTarget(false, visualElement.prevViewportBox);\n}\n\nexport { collectProjectingAncestors, collectProjectingChildren, snapshotViewportBox, updateLayoutMeasurement };","map":{"version":3,"names":["sync","copyAxisBox","compareByDepth","isProjecting","visualElement","isEnabled","projection","shouldResetTransform","collectProjectingAncestors","ancestors","parent","push","collectProjectingChildren","children","addChild","child","forEach","sort","updateLayoutMeasurement","layoutState","getLayoutState","notifyBeforeLayoutMeasure","layout","isHydrated","measureViewportBox","layoutCorrected","notifyLayoutMeasure","prevViewportBox","update","rebaseProjectionTarget","snapshotViewportBox"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/node_modules/framer-motion/dist/es/render/dom/projection/utils.js"],"sourcesContent":["import sync from 'framesync';\nimport { copyAxisBox } from '../../../utils/geometry/index.js';\nimport { compareByDepth } from '../../utils/compare-by-depth.js';\n\nfunction isProjecting(visualElement) {\n    var isEnabled = visualElement.projection.isEnabled;\n    return isEnabled || visualElement.shouldResetTransform();\n}\nfunction collectProjectingAncestors(visualElement, ancestors) {\n    if (ancestors === void 0) { ancestors = []; }\n    var parent = visualElement.parent;\n    if (parent)\n        collectProjectingAncestors(parent, ancestors);\n    if (isProjecting(visualElement))\n        ancestors.push(visualElement);\n    return ancestors;\n}\nfunction collectProjectingChildren(visualElement) {\n    var children = [];\n    var addChild = function (child) {\n        if (isProjecting(child))\n            children.push(child);\n        child.children.forEach(addChild);\n    };\n    visualElement.children.forEach(addChild);\n    return children.sort(compareByDepth);\n}\n/**\n * Update the layoutState by measuring the DOM layout. This\n * should be called after resetting any layout-affecting transforms.\n */\nfunction updateLayoutMeasurement(visualElement) {\n    if (visualElement.shouldResetTransform())\n        return;\n    var layoutState = visualElement.getLayoutState();\n    visualElement.notifyBeforeLayoutMeasure(layoutState.layout);\n    layoutState.isHydrated = true;\n    layoutState.layout = visualElement.measureViewportBox();\n    layoutState.layoutCorrected = copyAxisBox(layoutState.layout);\n    visualElement.notifyLayoutMeasure(layoutState.layout, visualElement.prevViewportBox || layoutState.layout);\n    sync.update(function () { return visualElement.rebaseProjectionTarget(); });\n}\n/**\n * Record the viewport box as it was before an expected mutation/re-render\n */\nfunction snapshotViewportBox(visualElement) {\n    if (visualElement.shouldResetTransform())\n        return;\n    visualElement.prevViewportBox = visualElement.measureViewportBox(false);\n    /**\n     * Update targetBox to match the prevViewportBox. This is just to ensure\n     * that targetBox is affected by scroll in the same way as the measured box\n     */\n    visualElement.rebaseProjectionTarget(false, visualElement.prevViewportBox);\n}\n\nexport { collectProjectingAncestors, collectProjectingChildren, snapshotViewportBox, updateLayoutMeasurement };\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,cAAT,QAA+B,iCAA/B;;AAEA,SAASC,YAAT,CAAsBC,aAAtB,EAAqC;EACjC,IAAIC,SAAS,GAAGD,aAAa,CAACE,UAAd,CAAyBD,SAAzC;EACA,OAAOA,SAAS,IAAID,aAAa,CAACG,oBAAd,EAApB;AACH;;AACD,SAASC,0BAAT,CAAoCJ,aAApC,EAAmDK,SAAnD,EAA8D;EAC1D,IAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;IAAEA,SAAS,GAAG,EAAZ;EAAiB;;EAC7C,IAAIC,MAAM,GAAGN,aAAa,CAACM,MAA3B;EACA,IAAIA,MAAJ,EACIF,0BAA0B,CAACE,MAAD,EAASD,SAAT,CAA1B;EACJ,IAAIN,YAAY,CAACC,aAAD,CAAhB,EACIK,SAAS,CAACE,IAAV,CAAeP,aAAf;EACJ,OAAOK,SAAP;AACH;;AACD,SAASG,yBAAT,CAAmCR,aAAnC,EAAkD;EAC9C,IAAIS,QAAQ,GAAG,EAAf;;EACA,IAAIC,QAAQ,GAAG,UAAUC,KAAV,EAAiB;IAC5B,IAAIZ,YAAY,CAACY,KAAD,CAAhB,EACIF,QAAQ,CAACF,IAAT,CAAcI,KAAd;IACJA,KAAK,CAACF,QAAN,CAAeG,OAAf,CAAuBF,QAAvB;EACH,CAJD;;EAKAV,aAAa,CAACS,QAAd,CAAuBG,OAAvB,CAA+BF,QAA/B;EACA,OAAOD,QAAQ,CAACI,IAAT,CAAcf,cAAd,CAAP;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASgB,uBAAT,CAAiCd,aAAjC,EAAgD;EAC5C,IAAIA,aAAa,CAACG,oBAAd,EAAJ,EACI;EACJ,IAAIY,WAAW,GAAGf,aAAa,CAACgB,cAAd,EAAlB;EACAhB,aAAa,CAACiB,yBAAd,CAAwCF,WAAW,CAACG,MAApD;EACAH,WAAW,CAACI,UAAZ,GAAyB,IAAzB;EACAJ,WAAW,CAACG,MAAZ,GAAqBlB,aAAa,CAACoB,kBAAd,EAArB;EACAL,WAAW,CAACM,eAAZ,GAA8BxB,WAAW,CAACkB,WAAW,CAACG,MAAb,CAAzC;EACAlB,aAAa,CAACsB,mBAAd,CAAkCP,WAAW,CAACG,MAA9C,EAAsDlB,aAAa,CAACuB,eAAd,IAAiCR,WAAW,CAACG,MAAnG;EACAtB,IAAI,CAAC4B,MAAL,CAAY,YAAY;IAAE,OAAOxB,aAAa,CAACyB,sBAAd,EAAP;EAAgD,CAA1E;AACH;AACD;AACA;AACA;;;AACA,SAASC,mBAAT,CAA6B1B,aAA7B,EAA4C;EACxC,IAAIA,aAAa,CAACG,oBAAd,EAAJ,EACI;EACJH,aAAa,CAACuB,eAAd,GAAgCvB,aAAa,CAACoB,kBAAd,CAAiC,KAAjC,CAAhC;EACA;AACJ;AACA;AACA;;EACIpB,aAAa,CAACyB,sBAAd,CAAqC,KAArC,EAA4CzB,aAAa,CAACuB,eAA1D;AACH;;AAED,SAASnB,0BAAT,EAAqCI,yBAArC,EAAgEkB,mBAAhE,EAAqFZ,uBAArF"},"metadata":{},"sourceType":"module"}