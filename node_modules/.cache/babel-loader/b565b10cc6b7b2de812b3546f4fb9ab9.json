{"ast":null,"code":"var util = require('../util');\n\nvar XmlNode = require('./xml-node').XmlNode;\n\nvar XmlText = require('./xml-text').XmlText;\n\nfunction XmlBuilder() {}\n\nXmlBuilder.prototype.toXML = function (params, shape, rootElement, noEmpty) {\n  var xml = new XmlNode(rootElement);\n  applyNamespaces(xml, shape, true);\n  serialize(xml, params, shape);\n  return xml.children.length > 0 || noEmpty ? xml.toString() : '';\n};\n\nfunction serialize(xml, value, shape) {\n  switch (shape.type) {\n    case 'structure':\n      return serializeStructure(xml, value, shape);\n\n    case 'map':\n      return serializeMap(xml, value, shape);\n\n    case 'list':\n      return serializeList(xml, value, shape);\n\n    default:\n      return serializeScalar(xml, value, shape);\n  }\n}\n\nfunction serializeStructure(xml, params, shape) {\n  util.arrayEach(shape.memberNames, function (memberName) {\n    var memberShape = shape.members[memberName];\n    if (memberShape.location !== 'body') return;\n    var value = params[memberName];\n    var name = memberShape.name;\n\n    if (value !== undefined && value !== null) {\n      if (memberShape.isXmlAttribute) {\n        xml.addAttribute(name, value);\n      } else if (memberShape.flattened) {\n        serialize(xml, value, memberShape);\n      } else {\n        var element = new XmlNode(name);\n        xml.addChildNode(element);\n        applyNamespaces(element, memberShape);\n        serialize(element, value, memberShape);\n      }\n    }\n  });\n}\n\nfunction serializeMap(xml, map, shape) {\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n  util.each(map, function (key, value) {\n    var entry = new XmlNode(shape.flattened ? shape.name : 'entry');\n    xml.addChildNode(entry);\n    var entryKey = new XmlNode(xmlKey);\n    var entryValue = new XmlNode(xmlValue);\n    entry.addChildNode(entryKey);\n    entry.addChildNode(entryValue);\n    serialize(entryKey, key, shape.key);\n    serialize(entryValue, value, shape.value);\n  });\n}\n\nfunction serializeList(xml, list, shape) {\n  if (shape.flattened) {\n    util.arrayEach(list, function (value) {\n      var name = shape.member.name || shape.name;\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  } else {\n    util.arrayEach(list, function (value) {\n      var name = shape.member.name || 'member';\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  }\n}\n\nfunction serializeScalar(xml, value, shape) {\n  xml.addChildNode(new XmlText(shape.toWireFormat(value)));\n}\n\nfunction applyNamespaces(xml, shape, isRoot) {\n  var uri,\n      prefix = 'xmlns';\n\n  if (shape.xmlNamespaceUri) {\n    uri = shape.xmlNamespaceUri;\n    if (shape.xmlNamespacePrefix) prefix += ':' + shape.xmlNamespacePrefix;\n  } else if (isRoot && shape.api.xmlNamespaceUri) {\n    uri = shape.api.xmlNamespaceUri;\n  }\n\n  if (uri) xml.addAttribute(prefix, uri);\n}\n/**\n * @api private\n */\n\n\nmodule.exports = XmlBuilder;","map":{"version":3,"names":["util","require","XmlNode","XmlText","XmlBuilder","prototype","toXML","params","shape","rootElement","noEmpty","xml","applyNamespaces","serialize","children","length","toString","value","type","serializeStructure","serializeMap","serializeList","serializeScalar","arrayEach","memberNames","memberName","memberShape","members","location","name","undefined","isXmlAttribute","addAttribute","flattened","element","addChildNode","map","xmlKey","key","xmlValue","each","entry","entryKey","entryValue","list","member","toWireFormat","isRoot","uri","prefix","xmlNamespaceUri","xmlNamespacePrefix","api","module","exports"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/medicacasa-frontend/node_modules/aws-sdk/lib/xml/builder.js"],"sourcesContent":["var util = require('../util');\nvar XmlNode = require('./xml-node').XmlNode;\nvar XmlText = require('./xml-text').XmlText;\n\nfunction XmlBuilder() { }\n\nXmlBuilder.prototype.toXML = function(params, shape, rootElement, noEmpty) {\n  var xml = new XmlNode(rootElement);\n  applyNamespaces(xml, shape, true);\n  serialize(xml, params, shape);\n  return xml.children.length > 0 || noEmpty ? xml.toString() : '';\n};\n\nfunction serialize(xml, value, shape) {\n  switch (shape.type) {\n    case 'structure': return serializeStructure(xml, value, shape);\n    case 'map': return serializeMap(xml, value, shape);\n    case 'list': return serializeList(xml, value, shape);\n    default: return serializeScalar(xml, value, shape);\n  }\n}\n\nfunction serializeStructure(xml, params, shape) {\n  util.arrayEach(shape.memberNames, function(memberName) {\n    var memberShape = shape.members[memberName];\n    if (memberShape.location !== 'body') return;\n\n    var value = params[memberName];\n    var name = memberShape.name;\n    if (value !== undefined && value !== null) {\n      if (memberShape.isXmlAttribute) {\n        xml.addAttribute(name, value);\n      } else if (memberShape.flattened) {\n        serialize(xml, value, memberShape);\n      } else {\n        var element = new XmlNode(name);\n        xml.addChildNode(element);\n        applyNamespaces(element, memberShape);\n        serialize(element, value, memberShape);\n      }\n    }\n  });\n}\n\nfunction serializeMap(xml, map, shape) {\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n\n  util.each(map, function(key, value) {\n    var entry = new XmlNode(shape.flattened ? shape.name : 'entry');\n    xml.addChildNode(entry);\n\n    var entryKey = new XmlNode(xmlKey);\n    var entryValue = new XmlNode(xmlValue);\n    entry.addChildNode(entryKey);\n    entry.addChildNode(entryValue);\n\n    serialize(entryKey, key, shape.key);\n    serialize(entryValue, value, shape.value);\n  });\n}\n\nfunction serializeList(xml, list, shape) {\n  if (shape.flattened) {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || shape.name;\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  } else {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || 'member';\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  }\n}\n\nfunction serializeScalar(xml, value, shape) {\n  xml.addChildNode(\n    new XmlText(shape.toWireFormat(value))\n  );\n}\n\nfunction applyNamespaces(xml, shape, isRoot) {\n  var uri, prefix = 'xmlns';\n  if (shape.xmlNamespaceUri) {\n    uri = shape.xmlNamespaceUri;\n    if (shape.xmlNamespacePrefix) prefix += ':' + shape.xmlNamespacePrefix;\n  } else if (isRoot && shape.api.xmlNamespaceUri) {\n    uri = shape.api.xmlNamespaceUri;\n  }\n\n  if (uri) xml.addAttribute(prefix, uri);\n}\n\n/**\n * @api private\n */\nmodule.exports = XmlBuilder;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}