{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport atomize from \"@quarkly/atomize\";\nimport { commonTextProps, commonTextPropsDefaults } from \"./text\";\nexport default atomize.span({\n  name: \"Span\",\n  normalize: true,\n  mixins: true,\n  description: {\n    en: \"Text element — text in different variants: paragraph, heading, etc.\",\n    ru: \"Элемент text — текст в различных вариантах: параграф, заголовок, и другие\"\n  },\n  propInfo: _objectSpread({\n    as: {\n      type: \"string\",\n      category: \"Main\",\n      control: \"select\",\n      variants: [\"span\", \"label\"]\n    }\n  }, commonTextProps)\n}, _objectSpread({\n  as: \"span\"\n}, commonTextPropsDefaults));","map":{"version":3,"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","atomize","commonTextProps","commonTextPropsDefaults","span","name","normalize","mixins","description","en","ru","propInfo","as","type","category","control","variants"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/node_modules/@quarkly/widgets/build/esm/prod/span.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport atomize from \"@quarkly/atomize\";\nimport { commonTextProps, commonTextPropsDefaults } from \"./text\";\nexport default atomize.span({\n  name: \"Span\",\n  normalize: true,\n  mixins: true,\n  description: {\n    en: \"Text element — text in different variants: paragraph, heading, etc.\",\n    ru: \"Элемент text — текст в различных вариантах: параграф, заголовок, и другие\"\n  },\n  propInfo: _objectSpread({\n    as: {\n      type: \"string\",\n      category: \"Main\",\n      control: \"select\",\n      variants: [\"span\", \"label\"]\n    }\n  }, commonTextProps)\n}, _objectSpread({\n  as: \"span\"\n}, commonTextPropsDefaults));"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;EAAE,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;EAAgC,IAAIG,MAAM,CAACC,qBAAX,EAAkC;IAAE,IAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;IAAoD,IAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;MAAE,OAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;IAAiE,CAAjG,CAAV;IAA8GP,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;EAAiC;;EAAC,OAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;IAAuD,IAAIA,CAAC,GAAG,CAAR,EAAW;MAAEf,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;QAAErB,eAAe,CAACe,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;MAA4C,CAAnG;IAAuG,CAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;MAAEjB,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;IAA4E,CAApH,MAA0H;MAAElB,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;QAAEhB,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;MAAmF,CAApI;IAAwI;EAAE;;EAAC,OAAON,MAAP;AAAgB;;AAEthB,OAAOU,OAAP,MAAoB,kBAApB;AACA,SAASC,eAAT,EAA0BC,uBAA1B,QAAyD,QAAzD;AACA,eAAeF,OAAO,CAACG,IAAR,CAAa;EAC1BC,IAAI,EAAE,MADoB;EAE1BC,SAAS,EAAE,IAFe;EAG1BC,MAAM,EAAE,IAHkB;EAI1BC,WAAW,EAAE;IACXC,EAAE,EAAE,qEADO;IAEXC,EAAE,EAAE;EAFO,CAJa;EAQ1BC,QAAQ,EAAErB,aAAa,CAAC;IACtBsB,EAAE,EAAE;MACFC,IAAI,EAAE,QADJ;MAEFC,QAAQ,EAAE,MAFR;MAGFC,OAAO,EAAE,QAHP;MAIFC,QAAQ,EAAE,CAAC,MAAD,EAAS,OAAT;IAJR;EADkB,CAAD,EAOpBd,eAPoB;AARG,CAAb,EAgBZZ,aAAa,CAAC;EACfsB,EAAE,EAAE;AADW,CAAD,EAEbT,uBAFa,CAhBD,CAAf"},"metadata":{},"sourceType":"module"}