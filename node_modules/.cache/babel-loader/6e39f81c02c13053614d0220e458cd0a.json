{"ast":null,"code":"import { __rest, __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.js';\nimport { getBoundingBox } from '../dom/projection/measure.js';\nimport { buildHTMLStyles } from './utils/build-styles.js';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.js';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.js';\nimport { isTransformProp } from './utils/transform.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { renderHTML } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from './utils/build-projection-transform.js';\n\nfunction getComputedStyle(element) {\n  return window.getComputedStyle(element);\n}\n\nvar htmlConfig = {\n  treeType: \"dom\",\n  readValueFromInstance: function (domElement, key) {\n    if (isTransformProp(key)) {\n      var defaultType = getDefaultValueType(key);\n      return defaultType ? defaultType.default || 0 : 0;\n    } else {\n      var computedStyle = getComputedStyle(domElement);\n      return (isCSSVariable(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;\n    }\n  },\n  sortNodePosition: function (a, b) {\n    /**\n     * compareDocumentPosition returns a bitmask, by using the bitwise &\n     * we're returning true if 2 in that bitmask is set to true. 2 is set\n     * to true if b preceeds a.\n     */\n    return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n  },\n  getBaseTarget: function (props, key) {\n    var _a;\n\n    return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n  },\n  measureViewportBox: function (element, _a) {\n    var transformPagePoint = _a.transformPagePoint;\n    return getBoundingBox(element, transformPagePoint);\n  },\n\n  /**\n   * Reset the transform on the current Element. This is called as part\n   * of a batched process across the entire layout tree. To remove this write\n   * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n   * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n   * works\n   */\n  resetTransform: function (element, domElement, props) {\n    var transformTemplate = props.transformTemplate;\n    domElement.style.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\"; // Ensure that whatever happens next, we restore our transform on the next frame\n\n    element.scheduleRender();\n  },\n  restoreTransform: function (instance, mutableState) {\n    instance.style.transform = mutableState.style.transform;\n  },\n  removeValueFromRenderState: function (key, _a) {\n    var vars = _a.vars,\n        style = _a.style;\n    delete vars[key];\n    delete style[key];\n  },\n\n  /**\n   * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n   * can be animated by Motion.\n   */\n  makeTargetAnimatable: function (element, _a, _b, isMounted) {\n    var transformValues = _b.transformValues;\n\n    if (isMounted === void 0) {\n      isMounted = true;\n    }\n\n    var transition = _a.transition,\n        transitionEnd = _a.transitionEnd,\n        target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n\n    var origin = getOrigin(target, transition || {}, element);\n    /**\n     * If Framer has provided a function to convert `Color` etc value types, convert them\n     */\n\n    if (transformValues) {\n      if (transitionEnd) transitionEnd = transformValues(transitionEnd);\n      if (target) target = transformValues(target);\n      if (origin) origin = transformValues(origin);\n    }\n\n    if (isMounted) {\n      checkTargetForNewValues(element, target, origin);\n      var parsed = parseDomVariant(element, target, origin, transitionEnd);\n      transitionEnd = parsed.transitionEnd;\n      target = parsed.target;\n    }\n\n    return __assign({\n      transition: transition,\n      transitionEnd: transitionEnd\n    }, target);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function (element, renderState, latestValues, projection, layoutState, options, props) {\n    if (element.isVisible !== undefined) {\n      renderState.style.visibility = element.isVisible ? \"visible\" : \"hidden\";\n    }\n\n    var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n    buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform ? buildLayoutProjectionTransformOrigin : undefined);\n  },\n  render: renderHTML\n};\nvar htmlVisualElement = visualElement(htmlConfig);\nexport { getComputedStyle, htmlConfig, htmlVisualElement };","map":{"version":3,"names":["__rest","__assign","visualElement","getOrigin","checkTargetForNewValues","getBoundingBox","buildHTMLStyles","isCSSVariable","parseDomVariant","isTransformProp","scrapeMotionValuesFromProps","renderHTML","getDefaultValueType","buildLayoutProjectionTransformOrigin","buildLayoutProjectionTransform","getComputedStyle","element","window","htmlConfig","treeType","readValueFromInstance","domElement","key","defaultType","default","computedStyle","getPropertyValue","sortNodePosition","a","b","compareDocumentPosition","getBaseTarget","props","_a","style","measureViewportBox","transformPagePoint","resetTransform","transformTemplate","transform","scheduleRender","restoreTransform","instance","mutableState","removeValueFromRenderState","vars","makeTargetAnimatable","_b","isMounted","transformValues","transition","transitionEnd","target","origin","parsed","build","renderState","latestValues","projection","layoutState","options","isVisible","undefined","visibility","isProjectionTranform","isEnabled","isHydrated","render","htmlVisualElement"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/medicacasa-frontend/node_modules/framer-motion/dist/es/render/html/visual-element.js"],"sourcesContent":["import { __rest, __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.js';\nimport { getBoundingBox } from '../dom/projection/measure.js';\nimport { buildHTMLStyles } from './utils/build-styles.js';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.js';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.js';\nimport { isTransformProp } from './utils/transform.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { renderHTML } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from './utils/build-projection-transform.js';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle(domElement);\n            return ((isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0);\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return getBoundingBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return __assign({ transition: transition,\n            transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (element, renderState, latestValues, projection, layoutState, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}