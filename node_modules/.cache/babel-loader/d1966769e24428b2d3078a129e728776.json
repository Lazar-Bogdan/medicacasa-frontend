{"ast":null,"code":"var util = require('../util');\n\nvar Shape = require('../model/shape');\n\nfunction DomXmlParser() {}\n\nDomXmlParser.prototype.parse = function (xml, shape) {\n  if (xml.replace(/^\\s+/, '') === '') return {};\n  var result, error;\n\n  try {\n    if (window.DOMParser) {\n      try {\n        var parser = new DOMParser();\n        result = parser.parseFromString(xml, 'text/xml');\n      } catch (syntaxError) {\n        throw util.error(new Error('Parse error in document'), {\n          originalError: syntaxError,\n          code: 'XMLParserError',\n          retryable: true\n        });\n      }\n\n      if (result.documentElement === null) {\n        throw util.error(new Error('Cannot parse empty document.'), {\n          code: 'XMLParserError',\n          retryable: true\n        });\n      }\n\n      var isError = result.getElementsByTagName('parsererror')[0];\n\n      if (isError && (isError.parentNode === result || isError.parentNode.nodeName === 'body' || isError.parentNode.parentNode === result || isError.parentNode.parentNode.nodeName === 'body')) {\n        var errorElement = isError.getElementsByTagName('div')[0] || isError;\n        throw util.error(new Error(errorElement.textContent || 'Parser error in document'), {\n          code: 'XMLParserError',\n          retryable: true\n        });\n      }\n    } else if (window.ActiveXObject) {\n      result = new window.ActiveXObject('Microsoft.XMLDOM');\n      result.async = false;\n\n      if (!result.loadXML(xml)) {\n        throw util.error(new Error('Parse error in document'), {\n          code: 'XMLParserError',\n          retryable: true\n        });\n      }\n    } else {\n      throw new Error('Cannot load XML parser');\n    }\n  } catch (e) {\n    error = e;\n  }\n\n  if (result && result.documentElement && !error) {\n    var data = parseXml(result.documentElement, shape);\n    var metadata = getElementByTagName(result.documentElement, 'ResponseMetadata');\n\n    if (metadata) {\n      data.ResponseMetadata = parseXml(metadata, {});\n    }\n\n    return data;\n  } else if (error) {\n    throw util.error(error || new Error(), {\n      code: 'XMLParserError',\n      retryable: true\n    });\n  } else {\n    // empty xml document\n    return {};\n  }\n};\n\nfunction getElementByTagName(xml, tag) {\n  var elements = xml.getElementsByTagName(tag);\n\n  for (var i = 0, iLen = elements.length; i < iLen; i++) {\n    if (elements[i].parentNode === xml) {\n      return elements[i];\n    }\n  }\n}\n\nfunction parseXml(xml, shape) {\n  if (!shape) shape = {};\n\n  switch (shape.type) {\n    case 'structure':\n      return parseStructure(xml, shape);\n\n    case 'map':\n      return parseMap(xml, shape);\n\n    case 'list':\n      return parseList(xml, shape);\n\n    case undefined:\n    case null:\n      return parseUnknown(xml);\n\n    default:\n      return parseScalar(xml, shape);\n  }\n}\n\nfunction parseStructure(xml, shape) {\n  var data = {};\n  if (xml === null) return data;\n  util.each(shape.members, function (memberName, memberShape) {\n    if (memberShape.isXmlAttribute) {\n      if (Object.prototype.hasOwnProperty.call(xml.attributes, memberShape.name)) {\n        var value = xml.attributes[memberShape.name].value;\n        data[memberName] = parseXml({\n          textContent: value\n        }, memberShape);\n      }\n    } else {\n      var xmlChild = memberShape.flattened ? xml : getElementByTagName(xml, memberShape.name);\n\n      if (xmlChild) {\n        data[memberName] = parseXml(xmlChild, memberShape);\n      } else if (!memberShape.flattened && memberShape.type === 'list' && !shape.api.xmlNoDefaultLists) {\n        data[memberName] = memberShape.defaultValue;\n      }\n    }\n  });\n  return data;\n}\n\nfunction parseMap(xml, shape) {\n  var data = {};\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n  var tagName = shape.flattened ? shape.name : 'entry';\n  var child = xml.firstElementChild;\n\n  while (child) {\n    if (child.nodeName === tagName) {\n      var key = getElementByTagName(child, xmlKey).textContent;\n      var value = getElementByTagName(child, xmlValue);\n      data[key] = parseXml(value, shape.value);\n    }\n\n    child = child.nextElementSibling;\n  }\n\n  return data;\n}\n\nfunction parseList(xml, shape) {\n  var data = [];\n  var tagName = shape.flattened ? shape.name : shape.member.name || 'member';\n  var child = xml.firstElementChild;\n\n  while (child) {\n    if (child.nodeName === tagName) {\n      data.push(parseXml(child, shape.member));\n    }\n\n    child = child.nextElementSibling;\n  }\n\n  return data;\n}\n\nfunction parseScalar(xml, shape) {\n  if (xml.getAttribute) {\n    var encoding = xml.getAttribute('encoding');\n\n    if (encoding === 'base64') {\n      shape = new Shape.create({\n        type: encoding\n      });\n    }\n  }\n\n  var text = xml.textContent;\n  if (text === '') text = null;\n\n  if (typeof shape.toType === 'function') {\n    return shape.toType(text);\n  } else {\n    return text;\n  }\n}\n\nfunction parseUnknown(xml) {\n  if (xml === undefined || xml === null) return ''; // empty object\n\n  if (!xml.firstElementChild) {\n    if (xml.parentNode.parentNode === null) return {};\n    if (xml.childNodes.length === 0) return '';else return xml.textContent;\n  } // object, parse as structure\n\n\n  var shape = {\n    type: 'structure',\n    members: {}\n  };\n  var child = xml.firstElementChild;\n\n  while (child) {\n    var tag = child.nodeName;\n\n    if (Object.prototype.hasOwnProperty.call(shape.members, tag)) {\n      // multiple tags of the same name makes it a list\n      shape.members[tag].type = 'list';\n    } else {\n      shape.members[tag] = {\n        name: tag\n      };\n    }\n\n    child = child.nextElementSibling;\n  }\n\n  return parseStructure(xml, shape);\n}\n/**\n * @api private\n */\n\n\nmodule.exports = DomXmlParser;","map":{"version":3,"names":["util","require","Shape","DomXmlParser","prototype","parse","xml","shape","replace","result","error","window","DOMParser","parser","parseFromString","syntaxError","Error","originalError","code","retryable","documentElement","isError","getElementsByTagName","parentNode","nodeName","errorElement","textContent","ActiveXObject","async","loadXML","e","data","parseXml","metadata","getElementByTagName","ResponseMetadata","tag","elements","i","iLen","length","type","parseStructure","parseMap","parseList","undefined","parseUnknown","parseScalar","each","members","memberName","memberShape","isXmlAttribute","Object","hasOwnProperty","call","attributes","name","value","xmlChild","flattened","api","xmlNoDefaultLists","defaultValue","xmlKey","key","xmlValue","tagName","child","firstElementChild","nextElementSibling","member","push","getAttribute","encoding","create","text","toType","childNodes","module","exports"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/node_modules/aws-sdk/lib/xml/browser_parser.js"],"sourcesContent":["var util = require('../util');\nvar Shape = require('../model/shape');\n\nfunction DomXmlParser() { }\n\nDomXmlParser.prototype.parse = function(xml, shape) {\n  if (xml.replace(/^\\s+/, '') === '') return {};\n\n  var result, error;\n  try {\n    if (window.DOMParser) {\n      try {\n        var parser = new DOMParser();\n        result = parser.parseFromString(xml, 'text/xml');\n      } catch (syntaxError) {\n        throw util.error(new Error('Parse error in document'),\n          {\n            originalError: syntaxError,\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n\n      if (result.documentElement === null) {\n        throw util.error(new Error('Cannot parse empty document.'),\n          {\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n\n      var isError = result.getElementsByTagName('parsererror')[0];\n      if (isError && (isError.parentNode === result ||\n          isError.parentNode.nodeName === 'body' ||\n          isError.parentNode.parentNode === result ||\n          isError.parentNode.parentNode.nodeName === 'body')) {\n        var errorElement = isError.getElementsByTagName('div')[0] || isError;\n        throw util.error(new Error(errorElement.textContent || 'Parser error in document'),\n          {\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n    } else if (window.ActiveXObject) {\n      result = new window.ActiveXObject('Microsoft.XMLDOM');\n      result.async = false;\n\n      if (!result.loadXML(xml)) {\n        throw util.error(new Error('Parse error in document'),\n          {\n            code: 'XMLParserError',\n            retryable: true\n          });\n      }\n    } else {\n      throw new Error('Cannot load XML parser');\n    }\n  } catch (e) {\n    error = e;\n  }\n\n  if (result && result.documentElement && !error) {\n    var data = parseXml(result.documentElement, shape);\n    var metadata = getElementByTagName(result.documentElement, 'ResponseMetadata');\n    if (metadata) {\n      data.ResponseMetadata = parseXml(metadata, {});\n    }\n    return data;\n  } else if (error) {\n    throw util.error(error || new Error(), {code: 'XMLParserError', retryable: true});\n  } else { // empty xml document\n    return {};\n  }\n};\n\nfunction getElementByTagName(xml, tag) {\n  var elements = xml.getElementsByTagName(tag);\n  for (var i = 0, iLen = elements.length; i < iLen; i++) {\n    if (elements[i].parentNode === xml) {\n      return elements[i];\n    }\n  }\n}\n\nfunction parseXml(xml, shape) {\n  if (!shape) shape = {};\n  switch (shape.type) {\n    case 'structure': return parseStructure(xml, shape);\n    case 'map': return parseMap(xml, shape);\n    case 'list': return parseList(xml, shape);\n    case undefined: case null: return parseUnknown(xml);\n    default: return parseScalar(xml, shape);\n  }\n}\n\nfunction parseStructure(xml, shape) {\n  var data = {};\n  if (xml === null) return data;\n\n  util.each(shape.members, function(memberName, memberShape) {\n    if (memberShape.isXmlAttribute) {\n      if (Object.prototype.hasOwnProperty.call(xml.attributes, memberShape.name)) {\n        var value = xml.attributes[memberShape.name].value;\n        data[memberName] = parseXml({textContent: value}, memberShape);\n      }\n    } else {\n      var xmlChild = memberShape.flattened ? xml :\n        getElementByTagName(xml, memberShape.name);\n      if (xmlChild) {\n        data[memberName] = parseXml(xmlChild, memberShape);\n      } else if (\n        !memberShape.flattened &&\n        memberShape.type === 'list' &&\n        !shape.api.xmlNoDefaultLists) {\n        data[memberName] = memberShape.defaultValue;\n      }\n    }\n  });\n\n  return data;\n}\n\nfunction parseMap(xml, shape) {\n  var data = {};\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n  var tagName = shape.flattened ? shape.name : 'entry';\n\n  var child = xml.firstElementChild;\n  while (child) {\n    if (child.nodeName === tagName) {\n      var key = getElementByTagName(child, xmlKey).textContent;\n      var value = getElementByTagName(child, xmlValue);\n      data[key] = parseXml(value, shape.value);\n    }\n    child = child.nextElementSibling;\n  }\n  return data;\n}\n\nfunction parseList(xml, shape) {\n  var data = [];\n  var tagName = shape.flattened ? shape.name : (shape.member.name || 'member');\n\n  var child = xml.firstElementChild;\n  while (child) {\n    if (child.nodeName === tagName) {\n      data.push(parseXml(child, shape.member));\n    }\n    child = child.nextElementSibling;\n  }\n  return data;\n}\n\nfunction parseScalar(xml, shape) {\n  if (xml.getAttribute) {\n    var encoding = xml.getAttribute('encoding');\n    if (encoding === 'base64') {\n      shape = new Shape.create({type: encoding});\n    }\n  }\n\n  var text = xml.textContent;\n  if (text === '') text = null;\n  if (typeof shape.toType === 'function') {\n    return shape.toType(text);\n  } else {\n    return text;\n  }\n}\n\nfunction parseUnknown(xml) {\n  if (xml === undefined || xml === null) return '';\n\n  // empty object\n  if (!xml.firstElementChild) {\n    if (xml.parentNode.parentNode === null) return {};\n    if (xml.childNodes.length === 0) return '';\n    else return xml.textContent;\n  }\n\n  // object, parse as structure\n  var shape = {type: 'structure', members: {}};\n  var child = xml.firstElementChild;\n  while (child) {\n    var tag = child.nodeName;\n    if (Object.prototype.hasOwnProperty.call(shape.members, tag)) {\n      // multiple tags of the same name makes it a list\n      shape.members[tag].type = 'list';\n    } else {\n      shape.members[tag] = {name: tag};\n    }\n    child = child.nextElementSibling;\n  }\n  return parseStructure(xml, shape);\n}\n\n/**\n * @api private\n */\nmodule.exports = DomXmlParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}