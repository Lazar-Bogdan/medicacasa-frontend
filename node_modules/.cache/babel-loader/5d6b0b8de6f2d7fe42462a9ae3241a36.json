{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport atomize from \"@quarkly/atomize\";\nimport { commonProps, pointerEventsCategoryText, pointerEventsCategoryTextDefaults } from \"./common-props\";\nexport var commonTextProps = _objectSpread(_objectSpread({\n  \"overflow-wrap\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    control: \"select\",\n    variants: [\"normal\", \"break-word\", \"anywhere\"],\n    title: \"Overflow wrap\",\n    description: {\n      en: \"overflow-wrap - sets whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box\",\n      ru: \"overflow-wrap - устанавливает правила расстановки переносов строк внутри неразрывной строки, чтобы избежать выхода текста за границы элемента\"\n    }\n  },\n  \"word-break\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    control: \"select\",\n    variants: [\"normal\", \"break-all\", \"keep-all\", \"break-word\"],\n    title: \"Word break\",\n    description: {\n      en: \"word-break - sets whether line breaks appear wherever the text would otherwise overflow its content box\",\n      ru: \"word-break - определяет, где будет установлен перевод на новую строку в случае превышения текстом границ блока\"\n    }\n  },\n  \"white-space\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    control: \"select\",\n    variants: [\"normal\", \"nowrap\", \"pre\", \"pre-wrap\", \"pre-line\", \"break-spaces\"],\n    title: \"White space\",\n    description: {\n      en: \"white-space - sets how white space inside an element is handled\",\n      ru: \"white-space - sets how white space inside an element is handled\"\n    }\n  },\n  \"text-indent\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    control: \"input\",\n    title: \"Text indent\",\n    description: {\n      en: \"text-indent - sets the length of empty space (indentation) that is put before lines of text in a block\",\n      ru: \"text-indent - устанавливает размер красной строки\"\n    }\n  },\n  \"text-overflow\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    title: \"Text overflow\",\n    control: \"select\",\n    variants: [\"clip\", \"ellipsis\"],\n    description: {\n      en: \"text-overflow - sets how hidden overflow content is signaled to users\",\n      ru: \"text-overflow - устанавливает как скрытый контент обозначается пользователю\"\n    }\n  },\n  \"hyphens\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    title: \"Hyphens\",\n    control: \"select\",\n    variants: [\"none\", \"manual\", \"auto\"],\n    description: {\n      en: \"hyphens - specifies how words should be hyphenated when text wraps across multiple lines\",\n      ru: \"hyphens - определяет способ расстановки переносов слов в блоке текста\"\n    }\n  }\n}, commonProps), pointerEventsCategoryText);\nexport var commonTextPropsDefaults = _objectSpread({\n  \"overflow-wrap\": \"normal\",\n  \"word-break\": \"normal\",\n  \"white-space\": \"normal\",\n  \"text-indent\": \"0\",\n  \"text-overflow\": \"clip\",\n  \"hyphens\": \"manual\"\n}, pointerEventsCategoryTextDefaults);\nexport default atomize.div({\n  name: \"Text\",\n  effects: {\n    hover: \":hover\",\n    firstChild: \":first-child\",\n    lastChild: \":last-child\",\n    onlyChild: \":only-child\",\n    firstOfType: \":first-of-type\",\n    lastOfType: \":last-of-type\",\n    onlyOfType: \":only-of-type\",\n    before: \":before\",\n    after: \":after\",\n    firstLine: \"::first-line\",\n    firstLetter: \"::first-letter\",\n    selection: \"::selection\",\n    empty: \":empty\"\n  },\n  normalize: true,\n  mixins: true,\n  description: {\n    en: \"Text element — text in different variants: paragraph, heading, etc.\",\n    ru: \"Элемент text — текст в различных вариантах: параграф, заголовок, и другие\"\n  },\n  propInfo: _objectSpread({\n    as: {\n      type: \"string\",\n      category: \"Main\",\n      control: \"select\",\n      variants: [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"p\", \"span\", \"div\"]\n    }\n  }, commonTextProps)\n}, _objectSpread({\n  as: \"div\",\n  \"margin-top\": \"16px\",\n  \"margin-bottom\": \"16px\",\n  \"min-width\": \"8px\",\n  \"min-height\": \"8px\"\n}, commonTextPropsDefaults));","map":{"version":3,"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","atomize","commonProps","pointerEventsCategoryText","pointerEventsCategoryTextDefaults","commonTextProps","type","category","control","variants","title","description","en","ru","commonTextPropsDefaults","div","name","effects","hover","firstChild","lastChild","onlyChild","firstOfType","lastOfType","onlyOfType","before","after","firstLine","firstLetter","selection","empty","normalize","mixins","propInfo","as"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/medicacasa-frontend/node_modules/@quarkly/widgets/build/esm/prod/text.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport atomize from \"@quarkly/atomize\";\nimport { commonProps, pointerEventsCategoryText, pointerEventsCategoryTextDefaults } from \"./common-props\";\nexport var commonTextProps = _objectSpread(_objectSpread({\n  \"overflow-wrap\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    control: \"select\",\n    variants: [\"normal\", \"break-word\", \"anywhere\"],\n    title: \"Overflow wrap\",\n    description: {\n      en: \"overflow-wrap - sets whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box\",\n      ru: \"overflow-wrap - устанавливает правила расстановки переносов строк внутри неразрывной строки, чтобы избежать выхода текста за границы элемента\"\n    }\n  },\n  \"word-break\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    control: \"select\",\n    variants: [\"normal\", \"break-all\", \"keep-all\", \"break-word\"],\n    title: \"Word break\",\n    description: {\n      en: \"word-break - sets whether line breaks appear wherever the text would otherwise overflow its content box\",\n      ru: \"word-break - определяет, где будет установлен перевод на новую строку в случае превышения текстом границ блока\"\n    }\n  },\n  \"white-space\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    control: \"select\",\n    variants: [\"normal\", \"nowrap\", \"pre\", \"pre-wrap\", \"pre-line\", \"break-spaces\"],\n    title: \"White space\",\n    description: {\n      en: \"white-space - sets how white space inside an element is handled\",\n      ru: \"white-space - sets how white space inside an element is handled\"\n    }\n  },\n  \"text-indent\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    control: \"input\",\n    title: \"Text indent\",\n    description: {\n      en: \"text-indent - sets the length of empty space (indentation) that is put before lines of text in a block\",\n      ru: \"text-indent - устанавливает размер красной строки\"\n    }\n  },\n  \"text-overflow\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    title: \"Text overflow\",\n    control: \"select\",\n    variants: [\"clip\", \"ellipsis\"],\n    description: {\n      en: \"text-overflow - sets how hidden overflow content is signaled to users\",\n      ru: \"text-overflow - устанавливает как скрытый контент обозначается пользователю\"\n    }\n  },\n  \"hyphens\": {\n    type: \"string\",\n    category: \"Extra styles\",\n    title: \"Hyphens\",\n    control: \"select\",\n    variants: [\"none\", \"manual\", \"auto\"],\n    description: {\n      en: \"hyphens - specifies how words should be hyphenated when text wraps across multiple lines\",\n      ru: \"hyphens - определяет способ расстановки переносов слов в блоке текста\"\n    }\n  }\n}, commonProps), pointerEventsCategoryText);\nexport var commonTextPropsDefaults = _objectSpread({\n  \"overflow-wrap\": \"normal\",\n  \"word-break\": \"normal\",\n  \"white-space\": \"normal\",\n  \"text-indent\": \"0\",\n  \"text-overflow\": \"clip\",\n  \"hyphens\": \"manual\"\n}, pointerEventsCategoryTextDefaults);\nexport default atomize.div({\n  name: \"Text\",\n  effects: {\n    hover: \":hover\",\n    firstChild: \":first-child\",\n    lastChild: \":last-child\",\n    onlyChild: \":only-child\",\n    firstOfType: \":first-of-type\",\n    lastOfType: \":last-of-type\",\n    onlyOfType: \":only-of-type\",\n    before: \":before\",\n    after: \":after\",\n    firstLine: \"::first-line\",\n    firstLetter: \"::first-letter\",\n    selection: \"::selection\",\n    empty: \":empty\"\n  },\n  normalize: true,\n  mixins: true,\n  description: {\n    en: \"Text element — text in different variants: paragraph, heading, etc.\",\n    ru: \"Элемент text — текст в различных вариантах: параграф, заголовок, и другие\"\n  },\n  propInfo: _objectSpread({\n    as: {\n      type: \"string\",\n      category: \"Main\",\n      control: \"select\",\n      variants: [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"p\", \"span\", \"div\"]\n    }\n  }, commonTextProps)\n}, _objectSpread({\n  as: \"div\",\n  \"margin-top\": \"16px\",\n  \"margin-bottom\": \"16px\",\n  \"min-width\": \"8px\",\n  \"min-height\": \"8px\"\n}, commonTextPropsDefaults));"],"mappings":"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"},"metadata":{},"sourceType":"module"}