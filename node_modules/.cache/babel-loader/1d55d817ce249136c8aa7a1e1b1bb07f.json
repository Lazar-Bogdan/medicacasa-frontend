{"ast":null,"code":"var AWS = require('./core');\n\nvar inherit = AWS.util.inherit;\n\nvar jmespath = require('jmespath');\n/**\n * This class encapsulates the response information\n * from a service request operation sent through {AWS.Request}.\n * The response object has two main properties for getting information\n * back from a request:\n *\n * ## The `data` property\n *\n * The `response.data` property contains the serialized object data\n * retrieved from the service request. For instance, for an\n * Amazon DynamoDB `listTables` method call, the response data might\n * look like:\n *\n * ```\n * > resp.data\n * { TableNames:\n *    [ 'table1', 'table2', ... ] }\n * ```\n *\n * The `data` property can be null if an error occurs (see below).\n *\n * ## The `error` property\n *\n * In the event of a service error (or transfer error), the\n * `response.error` property will be filled with the given\n * error data in the form:\n *\n * ```\n * { code: 'SHORT_UNIQUE_ERROR_CODE',\n *   message: 'Some human readable error message' }\n * ```\n *\n * In the case of an error, the `data` property will be `null`.\n * Note that if you handle events that can be in a failure state,\n * you should always check whether `response.error` is set\n * before attempting to access the `response.data` property.\n *\n * @!attribute data\n *   @readonly\n *   @!group Data Properties\n *   @note Inside of a {AWS.Request~httpData} event, this\n *     property contains a single raw packet instead of the\n *     full de-serialized service response.\n *   @return [Object] the de-serialized response data\n *     from the service.\n *\n * @!attribute error\n *   An structure containing information about a service\n *   or networking error.\n *   @readonly\n *   @!group Data Properties\n *   @note This attribute is only filled if a service or\n *     networking error occurs.\n *   @return [Error]\n *     * code [String] a unique short code representing the\n *       error that was emitted.\n *     * message [String] a longer human readable error message\n *     * retryable [Boolean] whether the error message is\n *       retryable.\n *     * statusCode [Numeric] in the case of a request that reached the service,\n *       this value contains the response status code.\n *     * time [Date] the date time object when the error occurred.\n *     * hostname [String] set when a networking error occurs to easily\n *       identify the endpoint of the request.\n *     * region [String] set when a networking error occurs to easily\n *       identify the region of the request.\n *\n * @!attribute requestId\n *   @readonly\n *   @!group Data Properties\n *   @return [String] the unique request ID associated with the response.\n *     Log this value when debugging requests for AWS support.\n *\n * @!attribute retryCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of retries that were\n *     attempted before the request was completed.\n *\n * @!attribute redirectCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of redirects that were\n *     followed before the request was completed.\n *\n * @!attribute httpResponse\n *   @readonly\n *   @!group HTTP Properties\n *   @return [AWS.HttpResponse] the raw HTTP response object\n *     containing the response headers and body information\n *     from the server.\n *\n * @see AWS.Request\n */\n\n\nAWS.Response = inherit({\n  /**\n   * @api private\n   */\n  constructor: function Response(request) {\n    this.request = request;\n    this.data = null;\n    this.error = null;\n    this.retryCount = 0;\n    this.redirectCount = 0;\n    this.httpResponse = new AWS.HttpResponse();\n\n    if (request) {\n      this.maxRetries = request.service.numRetries();\n      this.maxRedirects = request.service.config.maxRedirects;\n    }\n  },\n\n  /**\n   * Creates a new request for the next page of response data, calling the\n   * callback with the page data if a callback is provided.\n   *\n   * @callback callback function(err, data)\n   *   Called when a page of data is returned from the next request.\n   *\n   *   @param err [Error] an error object, if an error occurred in the request\n   *   @param data [Object] the next page of data, or null, if there are no\n   *     more pages left.\n   * @return [AWS.Request] the request object for the next page of data\n   * @return [null] if no callback is provided and there are no pages left\n   *   to retrieve.\n   * @since v1.4.0\n   */\n  nextPage: function nextPage(callback) {\n    var config;\n    var service = this.request.service;\n    var operation = this.request.operation;\n\n    try {\n      config = service.paginationConfig(operation, true);\n    } catch (e) {\n      this.error = e;\n    }\n\n    if (!this.hasNextPage()) {\n      if (callback) callback(this.error, null);else if (this.error) throw this.error;\n      return null;\n    }\n\n    var params = AWS.util.copy(this.request.params);\n\n    if (!this.nextPageTokens) {\n      return callback ? callback(null, null) : null;\n    } else {\n      var inputTokens = config.inputToken;\n      if (typeof inputTokens === 'string') inputTokens = [inputTokens];\n\n      for (var i = 0; i < inputTokens.length; i++) {\n        params[inputTokens[i]] = this.nextPageTokens[i];\n      }\n\n      return service.makeRequest(this.request.operation, params, callback);\n    }\n  },\n\n  /**\n   * @return [Boolean] whether more pages of data can be returned by further\n   *   requests\n   * @since v1.4.0\n   */\n  hasNextPage: function hasNextPage() {\n    this.cacheNextPageTokens();\n    if (this.nextPageTokens) return true;\n    if (this.nextPageTokens === undefined) return undefined;else return false;\n  },\n\n  /**\n   * @api private\n   */\n  cacheNextPageTokens: function cacheNextPageTokens() {\n    if (Object.prototype.hasOwnProperty.call(this, 'nextPageTokens')) return this.nextPageTokens;\n    this.nextPageTokens = undefined;\n    var config = this.request.service.paginationConfig(this.request.operation);\n    if (!config) return this.nextPageTokens;\n    this.nextPageTokens = null;\n\n    if (config.moreResults) {\n      if (!jmespath.search(this.data, config.moreResults)) {\n        return this.nextPageTokens;\n      }\n    }\n\n    var exprs = config.outputToken;\n    if (typeof exprs === 'string') exprs = [exprs];\n    AWS.util.arrayEach.call(this, exprs, function (expr) {\n      var output = jmespath.search(this.data, expr);\n\n      if (output) {\n        this.nextPageTokens = this.nextPageTokens || [];\n        this.nextPageTokens.push(output);\n      }\n    });\n    return this.nextPageTokens;\n  }\n});","map":{"version":3,"names":["AWS","require","inherit","util","jmespath","Response","constructor","request","data","error","retryCount","redirectCount","httpResponse","HttpResponse","maxRetries","service","numRetries","maxRedirects","config","nextPage","callback","operation","paginationConfig","e","hasNextPage","params","copy","nextPageTokens","inputTokens","inputToken","i","length","makeRequest","cacheNextPageTokens","undefined","Object","prototype","hasOwnProperty","call","moreResults","search","exprs","outputToken","arrayEach","expr","output","push"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/medicacasa-frontend/node_modules/aws-sdk/lib/response.js"],"sourcesContent":["var AWS = require('./core');\nvar inherit = AWS.util.inherit;\nvar jmespath = require('jmespath');\n\n/**\n * This class encapsulates the response information\n * from a service request operation sent through {AWS.Request}.\n * The response object has two main properties for getting information\n * back from a request:\n *\n * ## The `data` property\n *\n * The `response.data` property contains the serialized object data\n * retrieved from the service request. For instance, for an\n * Amazon DynamoDB `listTables` method call, the response data might\n * look like:\n *\n * ```\n * > resp.data\n * { TableNames:\n *    [ 'table1', 'table2', ... ] }\n * ```\n *\n * The `data` property can be null if an error occurs (see below).\n *\n * ## The `error` property\n *\n * In the event of a service error (or transfer error), the\n * `response.error` property will be filled with the given\n * error data in the form:\n *\n * ```\n * { code: 'SHORT_UNIQUE_ERROR_CODE',\n *   message: 'Some human readable error message' }\n * ```\n *\n * In the case of an error, the `data` property will be `null`.\n * Note that if you handle events that can be in a failure state,\n * you should always check whether `response.error` is set\n * before attempting to access the `response.data` property.\n *\n * @!attribute data\n *   @readonly\n *   @!group Data Properties\n *   @note Inside of a {AWS.Request~httpData} event, this\n *     property contains a single raw packet instead of the\n *     full de-serialized service response.\n *   @return [Object] the de-serialized response data\n *     from the service.\n *\n * @!attribute error\n *   An structure containing information about a service\n *   or networking error.\n *   @readonly\n *   @!group Data Properties\n *   @note This attribute is only filled if a service or\n *     networking error occurs.\n *   @return [Error]\n *     * code [String] a unique short code representing the\n *       error that was emitted.\n *     * message [String] a longer human readable error message\n *     * retryable [Boolean] whether the error message is\n *       retryable.\n *     * statusCode [Numeric] in the case of a request that reached the service,\n *       this value contains the response status code.\n *     * time [Date] the date time object when the error occurred.\n *     * hostname [String] set when a networking error occurs to easily\n *       identify the endpoint of the request.\n *     * region [String] set when a networking error occurs to easily\n *       identify the region of the request.\n *\n * @!attribute requestId\n *   @readonly\n *   @!group Data Properties\n *   @return [String] the unique request ID associated with the response.\n *     Log this value when debugging requests for AWS support.\n *\n * @!attribute retryCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of retries that were\n *     attempted before the request was completed.\n *\n * @!attribute redirectCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of redirects that were\n *     followed before the request was completed.\n *\n * @!attribute httpResponse\n *   @readonly\n *   @!group HTTP Properties\n *   @return [AWS.HttpResponse] the raw HTTP response object\n *     containing the response headers and body information\n *     from the server.\n *\n * @see AWS.Request\n */\nAWS.Response = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function Response(request) {\n    this.request = request;\n    this.data = null;\n    this.error = null;\n    this.retryCount = 0;\n    this.redirectCount = 0;\n    this.httpResponse = new AWS.HttpResponse();\n    if (request) {\n      this.maxRetries = request.service.numRetries();\n      this.maxRedirects = request.service.config.maxRedirects;\n    }\n  },\n\n  /**\n   * Creates a new request for the next page of response data, calling the\n   * callback with the page data if a callback is provided.\n   *\n   * @callback callback function(err, data)\n   *   Called when a page of data is returned from the next request.\n   *\n   *   @param err [Error] an error object, if an error occurred in the request\n   *   @param data [Object] the next page of data, or null, if there are no\n   *     more pages left.\n   * @return [AWS.Request] the request object for the next page of data\n   * @return [null] if no callback is provided and there are no pages left\n   *   to retrieve.\n   * @since v1.4.0\n   */\n  nextPage: function nextPage(callback) {\n    var config;\n    var service = this.request.service;\n    var operation = this.request.operation;\n    try {\n      config = service.paginationConfig(operation, true);\n    } catch (e) { this.error = e; }\n\n    if (!this.hasNextPage()) {\n      if (callback) callback(this.error, null);\n      else if (this.error) throw this.error;\n      return null;\n    }\n\n    var params = AWS.util.copy(this.request.params);\n    if (!this.nextPageTokens) {\n      return callback ? callback(null, null) : null;\n    } else {\n      var inputTokens = config.inputToken;\n      if (typeof inputTokens === 'string') inputTokens = [inputTokens];\n      for (var i = 0; i < inputTokens.length; i++) {\n        params[inputTokens[i]] = this.nextPageTokens[i];\n      }\n      return service.makeRequest(this.request.operation, params, callback);\n    }\n  },\n\n  /**\n   * @return [Boolean] whether more pages of data can be returned by further\n   *   requests\n   * @since v1.4.0\n   */\n  hasNextPage: function hasNextPage() {\n    this.cacheNextPageTokens();\n    if (this.nextPageTokens) return true;\n    if (this.nextPageTokens === undefined) return undefined;\n    else return false;\n  },\n\n  /**\n   * @api private\n   */\n  cacheNextPageTokens: function cacheNextPageTokens() {\n    if (Object.prototype.hasOwnProperty.call(this, 'nextPageTokens')) return this.nextPageTokens;\n    this.nextPageTokens = undefined;\n\n    var config = this.request.service.paginationConfig(this.request.operation);\n    if (!config) return this.nextPageTokens;\n\n    this.nextPageTokens = null;\n    if (config.moreResults) {\n      if (!jmespath.search(this.data, config.moreResults)) {\n        return this.nextPageTokens;\n      }\n    }\n\n    var exprs = config.outputToken;\n    if (typeof exprs === 'string') exprs = [exprs];\n    AWS.util.arrayEach.call(this, exprs, function (expr) {\n      var output = jmespath.search(this.data, expr);\n      if (output) {\n        this.nextPageTokens = this.nextPageTokens || [];\n        this.nextPageTokens.push(output);\n      }\n    });\n\n    return this.nextPageTokens;\n  }\n\n});\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIC,OAAO,GAAGF,GAAG,CAACG,IAAJ,CAASD,OAAvB;;AACA,IAAIE,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,GAAG,CAACK,QAAJ,GAAeH,OAAO,CAAC;EAErB;AACF;AACA;EACEI,WAAW,EAAE,SAASD,QAAT,CAAkBE,OAAlB,EAA2B;IACtC,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKC,IAAL,GAAY,IAAZ;IACA,KAAKC,KAAL,GAAa,IAAb;IACA,KAAKC,UAAL,GAAkB,CAAlB;IACA,KAAKC,aAAL,GAAqB,CAArB;IACA,KAAKC,YAAL,GAAoB,IAAIZ,GAAG,CAACa,YAAR,EAApB;;IACA,IAAIN,OAAJ,EAAa;MACX,KAAKO,UAAL,GAAkBP,OAAO,CAACQ,OAAR,CAAgBC,UAAhB,EAAlB;MACA,KAAKC,YAAL,GAAoBV,OAAO,CAACQ,OAAR,CAAgBG,MAAhB,CAAuBD,YAA3C;IACD;EACF,CAhBoB;;EAkBrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,QAAQ,EAAE,SAASA,QAAT,CAAkBC,QAAlB,EAA4B;IACpC,IAAIF,MAAJ;I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"},"metadata":{},"sourceType":"script"}