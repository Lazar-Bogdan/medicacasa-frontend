{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar LinkedListNode =\n/** @class */\nfunction () {\n  function LinkedListNode(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  return LinkedListNode;\n}();\n\nvar LRUCache =\n/** @class */\nfunction () {\n  function LRUCache(size) {\n    this.nodeMap = {};\n    this.size = 0;\n\n    if (typeof size !== 'number' || size < 1) {\n      throw new Error('Cache size can only be positive number');\n    }\n\n    this.sizeLimit = size;\n  }\n\n  Object.defineProperty(LRUCache.prototype, \"length\", {\n    get: function get() {\n      return this.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LRUCache.prototype.prependToList = function (node) {\n    if (!this.headerNode) {\n      this.tailNode = node;\n    } else {\n      this.headerNode.prev = node;\n      node.next = this.headerNode;\n    }\n\n    this.headerNode = node;\n    this.size++;\n  };\n\n  LRUCache.prototype.removeFromTail = function () {\n    if (!this.tailNode) {\n      return undefined;\n    }\n\n    var node = this.tailNode;\n    var prevNode = node.prev;\n\n    if (prevNode) {\n      prevNode.next = undefined;\n    }\n\n    node.prev = undefined;\n    this.tailNode = prevNode;\n    this.size--;\n    return node;\n  };\n\n  LRUCache.prototype.detachFromList = function (node) {\n    if (this.headerNode === node) {\n      this.headerNode = node.next;\n    }\n\n    if (this.tailNode === node) {\n      this.tailNode = node.prev;\n    }\n\n    if (node.prev) {\n      node.prev.next = node.next;\n    }\n\n    if (node.next) {\n      node.next.prev = node.prev;\n    }\n\n    node.next = undefined;\n    node.prev = undefined;\n    this.size--;\n  };\n\n  LRUCache.prototype.get = function (key) {\n    if (this.nodeMap[key]) {\n      var node = this.nodeMap[key];\n      this.detachFromList(node);\n      this.prependToList(node);\n      return node.value;\n    }\n  };\n\n  LRUCache.prototype.remove = function (key) {\n    if (this.nodeMap[key]) {\n      var node = this.nodeMap[key];\n      this.detachFromList(node);\n      delete this.nodeMap[key];\n    }\n  };\n\n  LRUCache.prototype.put = function (key, value) {\n    if (this.nodeMap[key]) {\n      this.remove(key);\n    } else if (this.size === this.sizeLimit) {\n      var tailNode = this.removeFromTail();\n      var key_1 = tailNode.key;\n      delete this.nodeMap[key_1];\n    }\n\n    var newNode = new LinkedListNode(key, value);\n    this.nodeMap[key] = newNode;\n    this.prependToList(newNode);\n  };\n\n  LRUCache.prototype.empty = function () {\n    var keys = Object.keys(this.nodeMap);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var node = this.nodeMap[key];\n      this.detachFromList(node);\n      delete this.nodeMap[key];\n    }\n  };\n\n  return LRUCache;\n}();\n\nexports.LRUCache = LRUCache;","map":{"version":3,"names":["Object","defineProperty","exports","value","LinkedListNode","key","LRUCache","size","nodeMap","Error","sizeLimit","prototype","get","enumerable","configurable","prependToList","node","headerNode","tailNode","prev","next","removeFromTail","undefined","prevNode","detachFromList","remove","put","key_1","newNode","empty","keys","i","length"],"sources":["/Users/lazarbogdan/test/medicacasa-frontend/node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedListNode = /** @class */ (function () {\n    function LinkedListNode(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    return LinkedListNode;\n}());\nvar LRUCache = /** @class */ (function () {\n    function LRUCache(size) {\n        this.nodeMap = {};\n        this.size = 0;\n        if (typeof size !== 'number' || size < 1) {\n            throw new Error('Cache size can only be positive number');\n        }\n        this.sizeLimit = size;\n    }\n    Object.defineProperty(LRUCache.prototype, \"length\", {\n        get: function () {\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.prependToList = function (node) {\n        if (!this.headerNode) {\n            this.tailNode = node;\n        }\n        else {\n            this.headerNode.prev = node;\n            node.next = this.headerNode;\n        }\n        this.headerNode = node;\n        this.size++;\n    };\n    LRUCache.prototype.removeFromTail = function () {\n        if (!this.tailNode) {\n            return undefined;\n        }\n        var node = this.tailNode;\n        var prevNode = node.prev;\n        if (prevNode) {\n            prevNode.next = undefined;\n        }\n        node.prev = undefined;\n        this.tailNode = prevNode;\n        this.size--;\n        return node;\n    };\n    LRUCache.prototype.detachFromList = function (node) {\n        if (this.headerNode === node) {\n            this.headerNode = node.next;\n        }\n        if (this.tailNode === node) {\n            this.tailNode = node.prev;\n        }\n        if (node.prev) {\n            node.prev.next = node.next;\n        }\n        if (node.next) {\n            node.next.prev = node.prev;\n        }\n        node.next = undefined;\n        node.prev = undefined;\n        this.size--;\n    };\n    LRUCache.prototype.get = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            this.prependToList(node);\n            return node.value;\n        }\n    };\n    LRUCache.prototype.remove = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    LRUCache.prototype.put = function (key, value) {\n        if (this.nodeMap[key]) {\n            this.remove(key);\n        }\n        else if (this.size === this.sizeLimit) {\n            var tailNode = this.removeFromTail();\n            var key_1 = tailNode.key;\n            delete this.nodeMap[key_1];\n        }\n        var newNode = new LinkedListNode(key, value);\n        this.nodeMap[key] = newNode;\n        this.prependToList(newNode);\n    };\n    LRUCache.prototype.empty = function () {\n        var keys = Object.keys(this.nodeMap);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    return LRUCache;\n}());\nexports.LRUCache = LRUCache;"],"mappings":"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"},"metadata":{},"sourceType":"script"}