import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _extends from "@babel/runtime/helpers/esm/extends";
import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
import React from "react";
import atomize from "@quarkly/atomize";
import { useRouteMatch } from "react-router-dom";
import { useMatch } from "@reach/router";
import { Link } from "@quarkly/widgets";
import { useOverrides } from "../hooks";
var Ul = atomize.ul();
var Li = atomize.li();

var getAPI = function getAPI() {
  if (typeof window !== "undefined") {
    return window.QAPI || {};
  }

  if (typeof global !== "undefined") {
    return global.QAPI || {};
  }

  return {};
};

var defaultProps = {
  depth: 1,
  rootId: "root",
  padding: "6px",
  margin: "0px",
  "list-style": "none",
  "exact-active-match": true
};
var propInfo = {
  depth: {
    weight: 1,
    category: "Main",
    control: "input"
  },
  rootId: {
    weight: 1,
    category: "Main",
    control: "input"
  },
  "exact-active-match": {
    weight: 1,
    category: "Main",
    control: "checkbox"
  }
};
var overrides = {
  item: {
    props: {
      padding: "6px 12px",
      margin: "0px 0px"
    }
  },
  sub: {
    props: {
      padding: "6px 6px",
      margin: "0px 0px",
      "list-style": "none"
    }
  },
  "item-404": {
    props: {
      display: "none"
    }
  },
  "item-active": {},
  link: {
    kind: "Link",
    props: {
      color: "--primary"
    }
  },
  "link-active": {
    kind: "Link",
    props: {
      color: "--dark"
    }
  }
};

var Item = function Item(_ref) {
  var id = _ref.id,
      name = _ref.name,
      pageUrl = _ref.pageUrl,
      _ref$path = _ref.path,
      path = _ref$path === void 0 ? [] : _ref$path,
      _ref$children = _ref.children,
      children = _ref$children === void 0 ? [] : _ref$children,
      pages = _ref.pages,
      _ref$exact = _ref.exact,
      exact = _ref$exact === void 0 ? false : _ref$exact,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 0 : _ref$depth,
      _ref$level = _ref.level,
      level = _ref$level === void 0 ? 0 : _ref$level,
      override = _ref.override;
  var hasSub = !!(children.length && level < depth);
  var common = {
    pages: pages,
    depth: depth,
    override: override,
    level: level
  };

  var _ref2 = getAPI() || {},
      mode = _ref2.mode,
      projectType = _ref2.projectType;

  var pagePath = [].concat(_toConsumableArray(path), [mode === "production" && pageUrl === "index" ? "" : pageUrl]);
  var href = "/".concat(pagePath.join("/"));
  var match = null;

  if (projectType === "gatsby") {
    match = useMatch(href) || null;
  } else {
    match = useRouteMatch({
      path: href,
      exact: exact
    }) || null;
  }

  var linkProps = override("link", match && "link-active", "link-".concat(pageUrl));
  return /*#__PURE__*/React.createElement(Li, override("item", match && "item-active", "item-".concat(pageUrl)), /*#__PURE__*/React.createElement(Link, _extends({
    href: href
  }, linkProps), linkProps.children || name), hasSub && /*#__PURE__*/React.createElement(Wrapper, _extends({
    rootId: id,
    path: [].concat(_toConsumableArray(path), [pageUrl])
  }, common, override("sub", "sub-".concat(pageUrl)))));
};

var Wrapper = function Wrapper(_ref3) {
  var _rootPage$children$ma, _rootPage$children;

  var pages = _ref3.pages,
      rootId = _ref3.rootId,
      override = _ref3.override,
      depth = _ref3.depth,
      _ref3$level = _ref3.level,
      level = _ref3$level === void 0 ? 0 : _ref3$level,
      path = _ref3.path,
      exact = _ref3.exact,
      rest = _objectWithoutProperties(_ref3, ["pages", "rootId", "override", "depth", "level", "path", "exact"]);

  var rootPage = pages === null || pages === void 0 ? void 0 : pages[rootId];
  var common = {
    pages: pages,
    override: override,
    depth: depth,
    path: path,
    exact: exact
  };
  var list = (_rootPage$children$ma = rootPage === null || rootPage === void 0 ? void 0 : (_rootPage$children = rootPage.children) === null || _rootPage$children === void 0 ? void 0 : _rootPage$children.map(function (id) {
    return pages[id];
  })) !== null && _rootPage$children$ma !== void 0 ? _rootPage$children$ma : [];
  return /*#__PURE__*/React.createElement(Ul, rest, list.map(function (item) {
    return /*#__PURE__*/React.createElement(Item, _extends({
      key: item.id
    }, item, common, {
      level: level + 1
    }));
  }));
};

var getParent = function getParent(pages, pageId) {
  if (!pageId || !pages[pageId]) return null;
  return Object.values(pages).find(function (_ref4) {
    var _ref4$children = _ref4.children,
        children = _ref4$children === void 0 ? [] : _ref4$children;
    return children && Array.isArray(children) && children.includes(pageId);
  });
};

var Menu = function Menu(_ref5) {
  var rootId = _ref5.rootId,
      depth = _ref5.depth,
      exact = _ref5["exact-active-match"],
      props = _objectWithoutProperties(_ref5, ["rootId", "depth", "exact-active-match"]);

  var _useOverrides = useOverrides(props, overrides, defaultProps),
      override = _useOverrides.override,
      rest = _useOverrides.rest;

  var pages = getAPI().pages || {};
  var path = [];

  if (rootId !== "root") {
    var parent = pages[rootId];

    while (parent && parent.id !== "root") {
      var _parent;

      path = [parent.pageUrl].concat(_toConsumableArray(path));
      parent = getParent(pages, (_parent = parent) === null || _parent === void 0 ? void 0 : _parent.id);
    }
  }

  return /*#__PURE__*/React.createElement(Wrapper, _extends({
    rootId: rootId,
    path: path,
    pages: pages,
    depth: depth,
    exact: exact,
    override: override
  }, rest));
};

Object.assign(Menu, {
  defaultProps: defaultProps,
  overrides: overrides,
  propInfo: propInfo
});
export default Menu;